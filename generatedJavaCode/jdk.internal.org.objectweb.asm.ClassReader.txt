Class: jdk.internal.org.objectweb.asm.ClassReader
Field: SIGNATURES boolean
Field: ANNOTATIONS boolean
Field: FRAMES boolean
Field: WRITER boolean
Field: RESIZE boolean
Field: SKIP_CODE int
Field: SKIP_DEBUG int
Field: SKIP_FRAMES int
Field: EXPAND_FRAMES int
Field: b byte[]
Field: items int[]
Field: strings java.lang.String[]
Field: maxStringLength int
Field: header int
Method: <init>
    public void <init>(byte[])
    {
        int $stack2;
        byte[] l1;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: byte[];

        $stack2 = lengthof l1;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>(l1, 0, $stack2);

        return;
    }

Method: <init>
    public void <init>(byte[], int, int)
    {
        byte[] l1;
        java.lang.String[] $stack15;
        short $stack10;
        byte $stack18;
        int[] $stack13, $stack14, $stack17;
        int l2, $stack9, $stack11, $stack12, l4, $stack16, $stack24, $stack26, l3, l5, l6, l7, l8, $i0, $i1;
        java.lang.IllegalArgumentException $u0;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: byte[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b> = l1;

        $stack9 = l2 + 6;

        $stack10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack9);

        $i0 = (int) $stack10;

        if $i0 <= 52 goto label1;

        $u0 = new java.lang.IllegalArgumentException;

        specialinvoke $u0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $u0;

     label1:
        $stack11 = l2 + 8;

        $stack12 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack11);

        $stack13 = newarray (int)[$stack12];

        l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items> = $stack13;

        $stack14 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        l4 = lengthof $stack14;

        $stack15 = newarray (java.lang.String)[l4];

        l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings> = $stack15;

        l5 = 0;

        l6 = l2 + 10;

        l7 = 1;

     label2:
        if l7 >= l4 goto label9;

        $stack17 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack16 = l6 + 1;

        $stack17[l7] = $stack16;

        $stack18 = l1[l6];

        $i1 = (int) $stack18;

        tableswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label7;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label7;
            case 8: goto label7;
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label3;
            case 13: goto label7;
            case 14: goto label7;
            case 15: goto label6;
            case 16: goto label7;
            case 17: goto label7;
            case 18: goto label3;
            default: goto label7;
        };

     label3:
        l8 = 5;

        goto label8;

     label4:
        l8 = 9;

        l7 = l7 + 1;

        goto label8;

     label5:
        $stack24 = l6 + 1;

        $stack26 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack24);

        l8 = 3 + $stack26;

        if l8 <= l5 goto label8;

        l5 = l8;

        goto label8;

     label6:
        l8 = 4;

        goto label8;

     label7:
        l8 = 3;

     label8:
        l6 = l6 + l8;

        l7 = l7 + 1;

        goto label2;

     label9:
        l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength> = l5;

        l0.<jdk.internal.org.objectweb.asm.ClassReader: int header> = l6;

        return;
    }

Method: getAccess
    public int getAccess()
    {
        int $stack1, $stack2;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack2 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack1);

        return $stack2;
    }

Method: getClassName
    public java.lang.String getClassName()
    {
        int $stack1, $stack2, $stack4;
        char[] $stack3;
        java.lang.String $stack5;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack4 = $stack1 + 2;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        $stack3 = newarray (char)[$stack2];

        $stack5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack4, $stack3);

        return $stack5;
    }

Method: getSuperName
    public java.lang.String getSuperName()
    {
        int $stack1, $stack2, $stack4;
        char[] $stack3;
        java.lang.String $stack5;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack4 = $stack1 + 4;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        $stack3 = newarray (char)[$stack2];

        $stack5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack4, $stack3);

        return $stack5;
    }

Method: getInterfaces
    public java.lang.String[] getInterfaces()
    {
        java.lang.String[] l3;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack6, $stack7, $stack8, l1, l5;
        char[] l4;
        java.lang.String $stack10;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        l1 = $stack6 + 6;

        $stack7 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1);

        l3 = newarray (java.lang.String)[$stack7];

        if $stack7 <= 0 goto label2;

        $stack8 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        l4 = newarray (char)[$stack8];

        l5 = 0;

     label1:
        if l5 >= $stack7 goto label2;

        l1 = l1 + 2;

        $stack10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l1, l4);

        l3[l5] = $stack10;

        l5 = l5 + 1;

        goto label1;

     label2:
        return l3;
    }

Method: copyPool
    void copyPool(jdk.internal.org.objectweb.asm.ClassWriter)
    {
        byte[] $stack17, $stack25;
        byte l7;
        long $stack87, $stack89;
        jdk.internal.org.objectweb.asm.ByteVector $stack18, $stack27;
        java.lang.String $stack31, $stack33, $stack64, $stack65, $stack67, $stack77, $stack79, $stack83, $stack84, $stack86, $stack98, $stack104, l10;
        jdk.internal.org.objectweb.asm.Item $stack37, $u0;
        char[] l2;
        jdk.internal.org.objectweb.asm.Item[] l4;
        int[] $stack12, $stack13, $stack23, $stack29, $stack56, $stack59, $stack81, $stack94;
        float $stack91;
        jdk.internal.org.objectweb.asm.ClassWriter l1;
        java.lang.String[] $stack93, $stack95;
        int $stack11, l3, $stack14, $stack15, $stack16, $stack22, $stack24, $stack28, $stack30, $stack32, $stack34, $stack44, $stack55, $stack57, $stack58, $stack60, $stack62, $stack63, $stack66, $stack78, $stack80, $stack82, $stack85, $stack90, $stack92, $stack96, $stack97, l5, l6, l9, l10#6, $stack36, $stack35, $stack70, $i0, $i1, $i2, $i3, $i4;
        double $stack20, $stack21, $stack88;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassWriter;

        $stack11 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        l2 = newarray (char)[$stack11];

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        l3 = lengthof $stack12;

        l4 = newarray (jdk.internal.org.objectweb.asm.Item)[l3];

        l5 = 1;

     label01:
        if l5 >= l3 goto label15;

        $stack23 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        l6 = $stack23[l5];

        $stack25 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack24 = l6 - 1;

        l7 = $stack25[$stack24];

        $u0 = new jdk.internal.org.objectweb.asm.Item;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void <init>(int)>(l5);

        $i0 = (int) l7;

        tableswitch($i0)
        {
            case 1: goto label08;
            case 2: goto label13;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label13;
            case 8: goto label13;
            case 9: goto label02;
            case 10: goto label02;
            case 11: goto label02;
            case 12: goto label05;
            case 13: goto label13;
            case 14: goto label13;
            case 15: goto label10;
            case 16: goto label13;
            case 17: goto label13;
            case 18: goto label11;
            default: goto label13;
        };

     label02:
        $stack81 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack80 = l6 + 2;

        $stack82 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack80);

        l9 = $stack81[$stack82];

        $stack83 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l6, l2);

        $stack84 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l9, l2);

        $stack85 = l9 + 2;

        $stack86 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack85, l2);

        $i1 = (int) l7;

        virtualinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($i1, $stack83, $stack84, $stack86);

        goto label14;

     label03:
        $stack92 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l6);

        virtualinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void set(int)>($stack92);

        goto label14;

     label04:
        $stack90 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l6);

        $stack91 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($stack90);

        virtualinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void set(float)>($stack91);

        goto label14;

     label05:
        $stack77 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l6, l2);

        $stack78 = l6 + 2;

        $stack79 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack78, l2);

        $i2 = (int) l7;

        virtualinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($i2, $stack77, $stack79, null);

        goto label14;

     label06:
        $stack89 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>(l6);

        virtualinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void set(long)>($stack89);

        l5 = l5 + 1;

        goto label14;

     label07:
        $stack87 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>(l6);

        $stack88 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($stack87);

        virtualinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void set(double)>($stack88);

        l5 = l5 + 1;

        goto label14;

     label08:
        $stack93 = l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings>;

        l10 = $stack93[l5];

        if l10 != null goto label09;

        $stack94 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        l6 = $stack94[l5];

        $stack95 = l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings>;

        $stack96 = l6 + 2;

        $stack97 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l6);

        $stack98 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>($stack96, $stack97, l2);

        $stack95[l5] = $stack98;

        l10 = $stack98;

     label09:
        $i3 = (int) l7;

        virtualinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($i3, l10, null, null);

        goto label14;

     label10:
        $stack56 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack55 = l6 + 1;

        $stack57 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack55);

        l10#6 = $stack56[$stack57];

        $stack59 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack58 = l10#6 + 2;

        $stack60 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack58);

        l9 = $stack59[$stack60];

        $stack62 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>(l6);

        $stack63 = 20 + $stack62;

        $stack64 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l10#6, l2);

        $stack65 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l9, l2);

        $stack66 = l9 + 2;

        $stack67 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack66, l2);

        virtualinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($stack63, $stack64, $stack65, $stack67);

        goto label14;

     label11:
        $stack27 = l1.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods>;

        if $stack27 != null goto label12;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item[],char[])>(l1, l4, l2);

     label12:
        $stack29 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack28 = l6 + 2;

        $stack30 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack28);

        $stack44 = $stack29[$stack30];

        $stack31 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack44, l2);

        $stack32 = $stack44 + 2;

        $stack33 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack32, l2);

        $stack34 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l6);

        virtualinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void set(java.lang.String,java.lang.String,int)>($stack31, $stack33, $stack34);

        goto label14;

     label13:
        $stack104 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l6, l2);

        $i4 = (int) l7;

        virtualinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($i4, $stack104, null, null);

     label14:
        $stack36 = $u0.<jdk.internal.org.objectweb.asm.Item: int hashCode>;

        $stack35 = lengthof l4;

        $stack70 = $stack36 % $stack35;

        $stack37 = l4[$stack70];

        $u0.<jdk.internal.org.objectweb.asm.Item: jdk.internal.org.objectweb.asm.Item next> = $stack37;

        l4[$stack70] = $u0;

        l5 = l5 + 1;

        goto label01;

     label15:
        $stack13 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack14 = $stack13[1];

        l5 = $stack14 - 1;

        $stack18 = l1.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack17 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack15 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack16 = $stack15 - l5;

        virtualinvoke $stack18.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack17, l5, $stack16);

        l1.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items> = l4;

        $stack20 = (double) l3;

        $stack21 = 0.75 * $stack20;

        $stack22 = (int) $stack21;

        l1.<jdk.internal.org.objectweb.asm.ClassWriter: int threshold> = $stack22;

        l1.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = l3;

        return;
    }

Method: copyBootstrapMethods
    private void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassWriter, jdk.internal.org.objectweb.asm.Item[], char[])
    {
        byte[] $stack23;
        jdk.internal.org.objectweb.asm.Item[] l2;
        boolean $stack46, l5;
        jdk.internal.org.objectweb.asm.ClassWriter l1;
        jdk.internal.org.objectweb.asm.ByteVector $u1;
        int $stack13, $stack15, $stack16, $stack17, $stack18, $stack20, $stack21, $stack22, $stack25, l9, $stack26, $stack29, $stack32, $stack33, $stack34, l12, $stack38, $stack39, $stack41, $stack43, $stack47, $stack49, $stack50, l4, l6, l7, l8, l10, l11, $i0, $i1;
        java.lang.String $stack44, $stack45;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        jdk.internal.org.objectweb.asm.Item $stack35, $u0;
        char[] l3;
        java.lang.Object $stack27, $stack40;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassWriter;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Item[];

        l3 := @parameter2: char[];

        $stack13 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int getAttributes()>();

        l4 = $stack13;

        l5 = 0;

        l6 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack13);

     label1:
        if l6 <= 0 goto label3;

        $stack43 = l4 + 2;

        $stack44 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack43, l3);

        $stack45 = "BootstrapMethods";

        $stack46 = virtualinvoke $stack45.<java.lang.String: boolean equals(java.lang.Object)>($stack44);

        if $stack46 == 0 goto label2;

        l5 = 1;

        goto label3;

     label2:
        $stack47 = l4 + 4;

        $stack49 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack47);

        $stack50 = 6 + $stack49;

        l4 = l4 + $stack50;

        $i0 = (int) -1;

        l6 = l6 + $i0;

        goto label1;

     label3:
        if l5 != 0 goto label4;

        return;

     label4:
        $stack15 = l4 + 8;

        $stack16 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack15);

        l7 = 0;

        l8 = l4 + 10;

     label5:
        if l7 >= $stack16 goto label8;

        $stack25 = l8 - l4;

        l9 = $stack25 - 10;

        $stack26 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l8);

        $stack27 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack26, l3);

        l10 = virtualinvoke $stack27.<java.lang.Object: int hashCode()>();

        $stack29 = l8 + 2;

        l11 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack29);

     label6:
        if l11 <= 0 goto label7;

        $stack38 = l8 + 4;

        $stack39 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack38);

        $stack40 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack39, l3);

        $stack41 = virtualinvoke $stack40.<java.lang.Object: int hashCode()>();

        l10 = l10 ^ $stack41;

        l8 = l8 + 2;

        $i1 = (int) -1;

        l11 = l11 + $i1;

        goto label6;

     label7:
        l8 = l8 + 4;

        $u0 = new jdk.internal.org.objectweb.asm.Item;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void <init>(int)>(l7);

        $stack32 = l10 & 2147483647;

        virtualinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void set(int,int)>(l9, $stack32);

        $stack34 = $u0.<jdk.internal.org.objectweb.asm.Item: int hashCode>;

        $stack33 = lengthof l2;

        l12 = $stack34 % $stack33;

        $stack35 = l2[l12];

        $u0.<jdk.internal.org.objectweb.asm.Item: jdk.internal.org.objectweb.asm.Item next> = $stack35;

        l2[l12] = $u0;

        l7 = l7 + 1;

        goto label5;

     label8:
        $stack17 = l4 + 4;

        $stack18 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack17);

        $u1 = new jdk.internal.org.objectweb.asm.ByteVector;

        $stack20 = $stack18 + 62;

        specialinvoke $u1.<jdk.internal.org.objectweb.asm.ByteVector: void <init>(int)>($stack20);

        $stack23 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack22 = l4 + 10;

        $stack21 = $stack18 - 2;

        virtualinvoke $u1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack23, $stack22, $stack21);

        l1.<jdk.internal.org.objectweb.asm.ClassWriter: int bootstrapMethodsCount> = $stack16;

        l1.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods> = $u1;

        return;
    }

Method: <init>
    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        byte[] $stack2;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        java.io.InputStream l1;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: java.io.InputStream;

        $stack2 = staticinvoke <jdk.internal.org.objectweb.asm.ClassReader: byte[] readClass(java.io.InputStream,boolean)>(l1, 0);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[])>($stack2);

        return;
    }

Method: <init>
    public void <init>(java.lang.String) throws java.io.IOException
    {
        byte[] $stack8;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        java.lang.StringBuilder $stack2, $stack4, $stack5;
        java.lang.String l1, $stack3, $stack6;
        java.io.InputStream $stack7;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: java.lang.String;

        $stack2 = new java.lang.StringBuilder;

        specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>();

        $stack3 = virtualinvoke l1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack7 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>($stack6);

        $stack8 = staticinvoke <jdk.internal.org.objectweb.asm.ClassReader: byte[] readClass(java.io.InputStream,boolean)>($stack7, 1);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[])>($stack8);

        return;
    }

Method: readClass
    private static byte[] readClass(java.io.InputStream, boolean) throws java.io.IOException
    {
        java.lang.Throwable $stack31;
        byte[] l2, l5, l6;
        byte $stack24;
        int $stack8, $stack9, $stack10, $stack11, $stack12, $stack20, $stack21, $stack22, $stack23, $stack26, l3, $i0;
        boolean l1;
        java.io.IOException $u0;
        java.io.InputStream l0;

        l0 := @parameter0: java.io.InputStream;

        l1 := @parameter1: boolean;

        if l0 != null goto label01;

        $u0 = new java.io.IOException;

        specialinvoke $u0.<java.io.IOException: void <init>(java.lang.String)>("Class not found");

        throw $u0;

     label01:
        $stack8 = virtualinvoke l0.<java.io.InputStream: int available()>();

        l2 = newarray (byte)[$stack8];

        l3 = 0;

     label02:
        $stack9 = lengthof l2;

        $stack10 = $stack9 - l3;

        $stack11 = virtualinvoke l0.<java.io.InputStream: int read(byte[],int,int)>(l2, l3, $stack10);

        $i0 = (int) -1;

        if $stack11 != $i0 goto label06;

        $stack26 = lengthof l2;

        if l3 >= $stack26 goto label03;

        l5 = newarray (byte)[l3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l2, 0, l5, 0, l3);

        l2 = l5;

     label03:
        l5 = l2;

     label04:
        if l1 == 0 goto label05;

        virtualinvoke l0.<java.io.InputStream: void close()>();

     label05:
        return l5;

     label06:
        l3 = l3 + $stack11;

        $stack12 = lengthof l2;

        if l3 != $stack12 goto label10;

        $stack20 = virtualinvoke l0.<java.io.InputStream: int read()>();

        if $stack20 >= 0 goto label09;

        l6 = l2;

     label07:
        if l1 == 0 goto label08;

        virtualinvoke l0.<java.io.InputStream: void close()>();

     label08:
        return l6;

     label09:
        $stack21 = lengthof l2;

        $stack22 = $stack21 + 1000;

        l6 = newarray (byte)[$stack22];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l2, 0, l6, 0, l3);

        $stack23 = l3;

        l3 = l3 + 1;

        $stack24 = (byte) $stack20;

        l6[$stack23] = $stack24;

        l2 = l6;

     label10:
        goto label02;

     label11:
        $stack31 := @caughtexception;

     label12:
        if l1 == 0 goto label13;

        virtualinvoke l0.<java.io.InputStream: void close()>();

     label13:
        throw $stack31;

        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label12 with label11;
    }

Method: accept
    public void accept(jdk.internal.org.objectweb.asm.ClassVisitor, int)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor l1;
        int l2;
        jdk.internal.org.objectweb.asm.Attribute[] $stack3;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        l2 := @parameter1: int;

        $stack3 = newarray (jdk.internal.org.objectweb.asm.Attribute)[0];

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void accept(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Attribute[],int)>(l1, $stack3, l2);

        return;
    }

Method: accept
    public void accept(jdk.internal.org.objectweb.asm.ClassVisitor, jdk.internal.org.objectweb.asm.Attribute[], int)
    {
        jdk.internal.org.objectweb.asm.Context $u0;
        int[] $stack40, $stack178, $stack181, l25;
        jdk.internal.org.objectweb.asm.ClassVisitor l1;
        jdk.internal.org.objectweb.asm.Attribute[] l2;
        int $stack28, l3, $stack31, $stack33, $stack35, $stack36, $stack37, $stack38, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack51, $stack62, $stack67, $stack69, $stack71, $stack72, $stack76, $stack77, $stack79, $stack87, $stack88, $stack90, $stack98, $stack106, $stack117, $stack143, $stack144, $stack145, $stack157, $stack158, $stack159, $stack160, $stack162, $stack163, $stack164, $stack167, $stack168, $stack170, $stack172, $stack174, $stack176, $stack177, $stack179, $stack182, $stack183, $stack185, l4, l7, l11, l17, l18, l19, l20, l21, l23, l26, l27, $stack147, $stack149, $stack150, l24, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        java.lang.String $stack32, $stack34, $stack66, $stack68, $stack70, $stack81, $stack92, $stack100, $stack108, $stack118, $stack119, $stack121, $stack123, $stack125, $stack127, $stack129, $stack131, $stack133, $stack135, $stack137, $stack139, $stack141, $stack187, l11#5, l12, l13, l14, l15, l16;
        char[] l5, $stack169;
        boolean $stack120, $stack122, $stack124, $stack126, $stack128, $stack130, $stack132, $stack134, $stack136, $stack138, $stack140, $stack142;
        jdk.internal.org.objectweb.asm.TypePath $stack80, $stack91;
        jdk.internal.org.objectweb.asm.Attribute $stack146, l22, l23#58;
        java.lang.String[] l10;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack82, $stack93, $stack101, $stack109;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Attribute[];

        l3 := @parameter2: int;

        l4 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack28 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        l5 = newarray (char)[$stack28];

        $u0 = new jdk.internal.org.objectweb.asm.Context;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.Context: void <init>()>();

        $u0.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs> = l2;

        $u0.<jdk.internal.org.objectweb.asm.Context: int flags> = l3;

        $u0.<jdk.internal.org.objectweb.asm.Context: char[] buffer> = l5;

        l7 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l4);

        $stack31 = l4 + 2;

        $stack32 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack31, l5);

        $stack33 = l4 + 4;

        $stack34 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack33, l5);

        $stack35 = l4 + 6;

        $stack36 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack35);

        l10 = newarray (java.lang.String)[$stack36];

        l4 = l4 + 8;

        l11 = 0;

     label01:
        $stack37 = lengthof l10;

        if l11 >= $stack37 goto label02;

        $stack187 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l4, l5);

        l10[l11] = $stack187;

        l4 = l4 + 2;

        l11 = l11 + 1;

        goto label01;

     label02:
        l11#5 = null;

        l12 = null;

        l13 = null;

        l14 = null;

        l15 = null;

        l16 = null;

        l17 = 0;

        l18 = 0;

        l19 = 0;

        l20 = 0;

        l21 = 0;

        l22 = null;

        $stack38 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int getAttributes()>();

        l4 = $stack38;

        l23 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack38);

     label03:
        if l23 <= 0 goto label20;

        $stack117 = l4 + 2;

        $stack118 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack117, l5);

        $stack119 = "SourceFile";

        $stack120 = virtualinvoke $stack119.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack120 == 0 goto label04;

        $stack185 = l4 + 8;

        l12 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack185, l5);

        goto label19;

     label04:
        $stack121 = "InnerClasses";

        $stack122 = virtualinvoke $stack121.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack122 == 0 goto label05;

        l21 = l4 + 8;

        goto label19;

     label05:
        $stack123 = "EnclosingMethod";

        $stack124 = virtualinvoke $stack123.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack124 == 0 goto label07;

        $stack174 = l4 + 8;

        l14 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack174, l5);

        $stack176 = l4 + 10;

        $stack177 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack176);

        if $stack177 == 0 goto label06;

        $stack178 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack179 = $stack178[$stack177];

        l15 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack179, l5);

        $stack181 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack182 = $stack181[$stack177];

        $stack183 = $stack182 + 2;

        l16 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack183, l5);

     label06:
        goto label19;

     label07:
        $stack125 = "Signature";

        $stack126 = virtualinvoke $stack125.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack126 == 0 goto label08;

        $stack172 = l4 + 8;

        l11#5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack172, l5);

        goto label19;

     label08:
        $stack127 = "RuntimeVisibleAnnotations";

        $stack128 = virtualinvoke $stack127.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack128 == 0 goto label09;

        l17 = l4 + 8;

        goto label19;

     label09:
        $stack129 = "RuntimeVisibleTypeAnnotations";

        $stack130 = virtualinvoke $stack129.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack130 == 0 goto label10;

        l19 = l4 + 8;

        goto label19;

     label10:
        $stack131 = "Deprecated";

        $stack132 = virtualinvoke $stack131.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack132 == 0 goto label11;

        l7 = l7 | 131072;

        goto label19;

     label11:
        $stack133 = "Synthetic";

        $stack134 = virtualinvoke $stack133.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack134 == 0 goto label12;

        l7 = l7 | 266240;

        goto label19;

     label12:
        $stack135 = "SourceDebugExtension";

        $stack136 = virtualinvoke $stack135.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack136 == 0 goto label13;

        $stack167 = l4 + 4;

        $stack168 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack167);

        $stack170 = l4 + 8;

        $stack169 = newarray (char)[$stack168];

        l13 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>($stack170, $stack168, $stack169);

        goto label19;

     label13:
        $stack137 = "RuntimeInvisibleAnnotations";

        $stack138 = virtualinvoke $stack137.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack138 == 0 goto label14;

        l18 = l4 + 8;

        goto label19;

     label14:
        $stack139 = "RuntimeInvisibleTypeAnnotations";

        $stack140 = virtualinvoke $stack139.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack140 == 0 goto label15;

        l20 = l4 + 8;

        goto label19;

     label15:
        $stack141 = "BootstrapMethods";

        $stack142 = virtualinvoke $stack141.<java.lang.String: boolean equals(java.lang.Object)>($stack118);

        if $stack142 == 0 goto label18;

        $stack157 = l4 + 8;

        $stack158 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack157);

        l25 = newarray (int)[$stack158];

        l26 = 0;

        l27 = l4 + 10;

     label16:
        $stack159 = lengthof l25;

        if l26 >= $stack159 goto label17;

        l25[l26] = l27;

        $stack160 = l27 + 2;

        $stack162 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack160);

        $stack163 = 2 + $stack162;

        $stack164 = $stack163 << 1;

        l27 = l27 + $stack164;

        l26 = l26 + 1;

        goto label16;

     label17:
        $u0.<jdk.internal.org.objectweb.asm.Context: int[] bootstrapMethods> = l25;

        goto label19;

     label18:
        $stack144 = l4 + 8;

        $stack143 = l4 + 4;

        $stack145 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack143);

        $i0 = (int) -1;

        $stack146 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Attribute readAttribute(jdk.internal.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>(l2, $stack118, $stack144, $stack145, l5, $i0, null);

        if $stack146 == null goto label19;

        $stack146.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = l22;

        l22 = $stack146;

     label19:
        $stack147 = l4 + 4;

        $stack149 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack147);

        $stack150 = 6 + $stack149;

        l4 = l4 + $stack150;

        $i1 = (int) -1;

        l23 = l23 + $i1;

        goto label03;

     label20:
        $stack40 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack41 = $stack40[1];

        $stack42 = $stack41 - 7;

        $stack43 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack42);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($stack43, l7, $stack32, l11#5, $stack34, l10);

        $stack44 = l3 & 2;

        if $stack44 != 0 goto label22;

        if l12 != null goto label21;

        if l13 == null goto label22;

     label21:
        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitSource(java.lang.String,java.lang.String)>(l12, l13);

     label22:
        if l14 == null goto label23;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>(l14, l15, l16);

     label23:
        if l17 == 0 goto label25;

        l23 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l17);

        l24 = l17 + 2;

     label24:
        if l23 <= 0 goto label25;

        $stack106 = l24 + 2;

        $stack108 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l24, l5);

        $stack109 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack108, 1);

        l24 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack106, l5, 1, $stack109);

        $i2 = (int) -1;

        l23 = l23 + $i2;

        goto label24;

     label25:
        if l18 == 0 goto label27;

        l23 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l18);

        l24 = l18 + 2;

     label26:
        if l23 <= 0 goto label27;

        $stack98 = l24 + 2;

        $stack100 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l24, l5);

        $stack101 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack100, 0);

        l24 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack98, l5, 1, $stack101);

        $i3 = (int) -1;

        l23 = l23 + $i3;

        goto label26;

     label27:
        if l19 == 0 goto label29;

        l23 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l19);

        l24 = l19 + 2;

     label28:
        if l23 <= 0 goto label29;

        $stack87 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>($u0, l24);

        $stack88 = $stack87 + 2;

        $stack90 = $u0.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack91 = $u0.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack92 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack87, l5);

        $stack93 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack90, $stack91, $stack92, 1);

        l24 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack88, l5, 1, $stack93);

        $i4 = (int) -1;

        l23 = l23 + $i4;

        goto label28;

     label29:
        if l20 == 0 goto label31;

        l23 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l20);

        l24 = l20 + 2;

     label30:
        if l23 <= 0 goto label31;

        $stack76 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>($u0, l24);

        $stack77 = $stack76 + 2;

        $stack79 = $u0.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack80 = $u0.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack81 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack76, l5);

        $stack82 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack79, $stack80, $stack81, 0);

        l24 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack77, l5, 1, $stack82);

        $i5 = (int) -1;

        l23 = l23 + $i5;

        goto label30;

     label31:
        if l22 == null goto label32;

        l23#58 = l22.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        l22.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = null;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(l22);

        l22 = l23#58;

        goto label31;

     label32:
        if l21 == 0 goto label34;

        l23 = l21 + 2;

        l24 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l21);

     label33:
        if l24 <= 0 goto label34;

        $stack66 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l23, l5);

        $stack67 = l23 + 2;

        $stack68 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack67, l5);

        $stack69 = l23 + 4;

        $stack70 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack69, l5);

        $stack71 = l23 + 6;

        $stack72 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack71);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>($stack66, $stack68, $stack70, $stack72);

        l23 = l23 + 8;

        $i6 = (int) -1;

        l24 = l24 + $i6;

        goto label33;

     label34:
        $stack45 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack48 = $stack45 + 10;

        $stack46 = lengthof l10;

        $stack47 = 2 * $stack46;

        $stack62 = $stack48 + $stack47;

        l4 = $stack62;

        $stack49 = $stack62 - 2;

        l23 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack49);

     label35:
        if l23 <= 0 goto label36;

        l4 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readField(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Context,int)>(l1, $u0, l4);

        $i7 = (int) -1;

        l23 = l23 + $i7;

        goto label35;

     label36:
        l4 = l4 + 2;

        $stack51 = l4 - 2;

        l23 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack51);

     label37:
        if l23 <= 0 goto label38;

        l4 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readMethod(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Context,int)>(l1, $u0, l4);

        $i8 = (int) -1;

        l23 = l23 + $i8;

        goto label37;

     label38:
        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitEnd()>();

        return;
    }

Method: readField
    private int readField(jdk.internal.org.objectweb.asm.ClassVisitor, jdk.internal.org.objectweb.asm.Context, int)
    {
        jdk.internal.org.objectweb.asm.FieldVisitor $stack24;
        jdk.internal.org.objectweb.asm.Context l2;
        java.lang.String $stack20, $stack22, $stack32, $stack43, $stack51, $stack59, $stack64, $stack65, $stack67, $stack69, $stack71, $stack73, $stack75, $stack77, $stack79, l8;
        char[] l4;
        boolean $stack66, $stack68, $stack70, $stack72, $stack74, $stack76, $stack78, $stack80;
        jdk.internal.org.objectweb.asm.ClassVisitor l1;
        jdk.internal.org.objectweb.asm.TypePath $stack31, $stack42;
        jdk.internal.org.objectweb.asm.Attribute $stack85, l14, l16#48;
        jdk.internal.org.objectweb.asm.Attribute[] $stack82;
        int $stack19, $stack21, $stack27, $stack28, $stack30, $stack38, $stack39, $stack41, $stack49, $stack57, $stack63, $stack81, $stack83, $stack84, $stack96, $stack98, $stack99, l3, l5, l3#3, l9, l10, l11, l12, l15, $stack86, $stack88, $stack89, l16, l17, $i0, $i1, $i2, $i3, $i4, $i5;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack33, $stack44, $stack52, $stack60;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        java.lang.Object l13, $stack100;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Context;

        l3 := @parameter2: int;

        l4 = l2.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        l5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3);

        $stack19 = l3 + 2;

        $stack20 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack19, l4);

        $stack21 = l3 + 4;

        $stack22 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack21, l4);

        l3#3 = l3 + 6;

        l8 = null;

        l9 = 0;

        l10 = 0;

        l11 = 0;

        l12 = 0;

        l13 = null;

        l14 = null;

        l15 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#3);

     label01:
        if l15 <= 0 goto label13;

        $stack63 = l3#3 + 2;

        $stack64 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack63, l4);

        $stack65 = "ConstantValue";

        $stack66 = virtualinvoke $stack65.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack66 == 0 goto label04;

        $stack98 = l3#3 + 8;

        $stack99 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack98);

        if $stack99 != 0 goto label02;

        $stack100 = null;

        goto label03;

     label02:
        $stack100 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack99, l4);

     label03:
        l13 = $stack100;

        goto label12;

     label04:
        $stack67 = "Signature";

        $stack68 = virtualinvoke $stack67.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack68 == 0 goto label05;

        $stack96 = l3#3 + 8;

        l8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack96, l4);

        goto label12;

     label05:
        $stack69 = "Deprecated";

        $stack70 = virtualinvoke $stack69.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack70 == 0 goto label06;

        l5 = l5 | 131072;

        goto label12;

     label06:
        $stack71 = "Synthetic";

        $stack72 = virtualinvoke $stack71.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack72 == 0 goto label07;

        l5 = l5 | 266240;

        goto label12;

     label07:
        $stack73 = "RuntimeVisibleAnnotations";

        $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack74 == 0 goto label08;

        l9 = l3#3 + 8;

        goto label12;

     label08:
        $stack75 = "RuntimeVisibleTypeAnnotations";

        $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack76 == 0 goto label09;

        l11 = l3#3 + 8;

        goto label12;

     label09:
        $stack77 = "RuntimeInvisibleAnnotations";

        $stack78 = virtualinvoke $stack77.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack78 == 0 goto label10;

        l10 = l3#3 + 8;

        goto label12;

     label10:
        $stack79 = "RuntimeInvisibleTypeAnnotations";

        $stack80 = virtualinvoke $stack79.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack80 == 0 goto label11;

        l12 = l3#3 + 8;

        goto label12;

     label11:
        $stack82 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack83 = l3#3 + 8;

        $stack81 = l3#3 + 4;

        $stack84 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack81);

        $i0 = (int) -1;

        $stack85 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Attribute readAttribute(jdk.internal.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>($stack82, $stack64, $stack83, $stack84, l4, $i0, null);

        if $stack85 == null goto label12;

        $stack85.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = l14;

        l14 = $stack85;

     label12:
        $stack86 = l3#3 + 4;

        $stack88 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack86);

        $stack89 = 6 + $stack88;

        l3#3 = l3#3 + $stack89;

        $i1 = (int) -1;

        l15 = l15 + $i1;

        goto label01;

     label13:
        l3#3 = l3#3 + 2;

        $stack24 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(l5, $stack20, $stack22, l8, l13);

        if $stack24 != null goto label14;

        return l3#3;

     label14:
        if l9 == 0 goto label16;

        l16 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l9);

        l17 = l9 + 2;

     label15:
        if l16 <= 0 goto label16;

        $stack57 = l17 + 2;

        $stack59 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l17, l4);

        $stack60 = virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack59, 1);

        l17 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack57, l4, 1, $stack60);

        $i2 = (int) -1;

        l16 = l16 + $i2;

        goto label15;

     label16:
        if l10 == 0 goto label18;

        l16 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l10);

        l17 = l10 + 2;

     label17:
        if l16 <= 0 goto label18;

        $stack49 = l17 + 2;

        $stack51 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l17, l4);

        $stack52 = virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack51, 0);

        l17 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack49, l4, 1, $stack52);

        $i3 = (int) -1;

        l16 = l16 + $i3;

        goto label17;

     label18:
        if l11 == 0 goto label20;

        l16 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l11);

        l17 = l11 + 2;

     label19:
        if l16 <= 0 goto label20;

        $stack38 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, l17);

        $stack39 = $stack38 + 2;

        $stack41 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack42 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack43 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack38, l4);

        $stack44 = virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack41, $stack42, $stack43, 1);

        l17 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack39, l4, 1, $stack44);

        $i4 = (int) -1;

        l16 = l16 + $i4;

        goto label19;

     label20:
        if l12 == 0 goto label22;

        l16 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l12);

        l17 = l12 + 2;

     label21:
        if l16 <= 0 goto label22;

        $stack27 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, l17);

        $stack28 = $stack27 + 2;

        $stack30 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack31 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack32 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack27, l4);

        $stack33 = virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack30, $stack31, $stack32, 0);

        l17 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack28, l4, 1, $stack33);

        $i5 = (int) -1;

        l16 = l16 + $i5;

        goto label21;

     label22:
        if l14 == null goto label23;

        l16#48 = l14.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        l14.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = null;

        virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.FieldVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(l14);

        l14 = l16#48;

        goto label22;

     label23:
        virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.FieldVisitor: void visitEnd()>();

        return l3#3;
    }

Method: readMethod
    private int readMethod(jdk.internal.org.objectweb.asm.ClassVisitor, jdk.internal.org.objectweb.asm.Context, int)
    {
        byte[] $stack79;
        byte $stack80;
        jdk.internal.org.objectweb.asm.MethodWriter l20;
        jdk.internal.org.objectweb.asm.Context l2;
        int[] $stack95;
        jdk.internal.org.objectweb.asm.ClassVisitor l1;
        jdk.internal.org.objectweb.asm.Attribute[] $stack130;
        int $stack23, $stack24, $stack26, l17, $stack31, $stack40, $stack41, $stack43, $stack51, $stack52, $stack54, $stack62, $stack70, $stack83, $stack84, $stack90, $stack91, $stack92, $stack93, $stack96, $stack97, $stack99, $stack101, $stack129, $stack131, $stack132, $stack144, $stack145, $stack146, $stack147, $stack148, $stack150, $stack151, $stack152, $stack156, $stack157, l3, l3#2, l5, l6, l9, l10, l11, l12, l13, l14, l15, l16, l19, l21, $stack134, $stack136, $stack137, l22, l20#48, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        jdk.internal.org.objectweb.asm.ClassReader l0, $stack87;
        jdk.internal.org.objectweb.asm.MethodVisitor $stack32;
        java.lang.String $stack25, $stack27, $stack29, $stack30, $stack45, $stack56, $stack64, $stack72, $stack82, $stack89, $stack102, $stack103, $stack105, $stack107, $stack109, $stack111, $stack113, $stack115, $stack117, $stack119, $stack121, $stack123, $stack125, $stack127, $stack153, l8;
        char[] l4;
        boolean $stack33, $stack104, $stack106, $stack108, $stack110, $stack112, $stack114, $stack116, $stack118, $stack120, $stack122, $stack124, $stack126, $stack128, l21#41, $stack100;
        jdk.internal.org.objectweb.asm.TypePath $stack44, $stack55;
        jdk.internal.org.objectweb.asm.Attribute $stack133, l18, l20#65;
        jdk.internal.org.objectweb.asm.ClassWriter $stack86;
        java.lang.String[] l7;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack46, $stack57, $stack65, $stack73, $stack76;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Context;

        l3 := @parameter2: int;

        l4 = l2.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack23 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3);

        l2.<jdk.internal.org.objectweb.asm.Context: int access> = $stack23;

        $stack24 = l3 + 2;

        $stack25 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack24, l4);

        l2.<jdk.internal.org.objectweb.asm.Context: java.lang.String name> = $stack25;

        $stack26 = l3 + 4;

        $stack27 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack26, l4);

        l2.<jdk.internal.org.objectweb.asm.Context: java.lang.String desc> = $stack27;

        l3#2 = l3 + 6;

        l5 = 0;

        l6 = 0;

        l7 = null;

        l8 = null;

        l9 = 0;

        l10 = 0;

        l11 = 0;

        l12 = 0;

        l13 = 0;

        l14 = 0;

        l15 = 0;

        l16 = 0;

        l17 = l3#2;

        l18 = null;

        l19 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#2);

     label01:
        if l19 <= 0 goto label18;

        $stack101 = l3#2 + 2;

        $stack102 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack101, l4);

        $stack103 = "Code";

        $stack104 = virtualinvoke $stack103.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack104 == 0 goto label02;

        $stack156 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack157 = $stack156 & 1;

        if $stack157 != 0 goto label17;

        l5 = l3#2 + 8;

        goto label17;

     label02:
        $stack105 = "Exceptions";

        $stack106 = virtualinvoke $stack105.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack106 == 0 goto label05;

        $stack150 = l3#2 + 8;

        $stack151 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack150);

        l7 = newarray (java.lang.String)[$stack151];

        l6 = l3#2 + 10;

        l21 = 0;

     label03:
        $stack152 = lengthof l7;

        if l21 >= $stack152 goto label04;

        $stack153 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l6, l4);

        l7[l21] = $stack153;

        l6 = l6 + 2;

        l21 = l21 + 1;

        goto label03;

     label04:
        goto label17;

     label05:
        $stack107 = "Signature";

        $stack108 = virtualinvoke $stack107.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack108 == 0 goto label06;

        $stack148 = l3#2 + 8;

        l8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack148, l4);

        goto label17;

     label06:
        $stack109 = "Deprecated";

        $stack110 = virtualinvoke $stack109.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack110 == 0 goto label07;

        $stack146 = l2.<jdk.internal.org.objectweb.asm.Context: int access>;

        $stack147 = $stack146 | 131072;

        l2.<jdk.internal.org.objectweb.asm.Context: int access> = $stack147;

        goto label17;

     label07:
        $stack111 = "RuntimeVisibleAnnotations";

        $stack112 = virtualinvoke $stack111.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack112 == 0 goto label08;

        l10 = l3#2 + 8;

        goto label17;

     label08:
        $stack113 = "RuntimeVisibleTypeAnnotations";

        $stack114 = virtualinvoke $stack113.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack114 == 0 goto label09;

        l12 = l3#2 + 8;

        goto label17;

     label09:
        $stack115 = "AnnotationDefault";

        $stack116 = virtualinvoke $stack115.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack116 == 0 goto label10;

        l14 = l3#2 + 8;

        goto label17;

     label10:
        $stack117 = "Synthetic";

        $stack118 = virtualinvoke $stack117.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack118 == 0 goto label11;

        $stack144 = l2.<jdk.internal.org.objectweb.asm.Context: int access>;

        $stack145 = $stack144 | 266240;

        l2.<jdk.internal.org.objectweb.asm.Context: int access> = $stack145;

        goto label17;

     label11:
        $stack119 = "RuntimeInvisibleAnnotations";

        $stack120 = virtualinvoke $stack119.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack120 == 0 goto label12;

        l11 = l3#2 + 8;

        goto label17;

     label12:
        $stack121 = "RuntimeInvisibleTypeAnnotations";

        $stack122 = virtualinvoke $stack121.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack122 == 0 goto label13;

        l13 = l3#2 + 8;

        goto label17;

     label13:
        $stack123 = "RuntimeVisibleParameterAnnotations";

        $stack124 = virtualinvoke $stack123.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack124 == 0 goto label14;

        l15 = l3#2 + 8;

        goto label17;

     label14:
        $stack125 = "RuntimeInvisibleParameterAnnotations";

        $stack126 = virtualinvoke $stack125.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack126 == 0 goto label15;

        l16 = l3#2 + 8;

        goto label17;

     label15:
        $stack127 = "MethodParameters";

        $stack128 = virtualinvoke $stack127.<java.lang.String: boolean equals(java.lang.Object)>($stack102);

        if $stack128 == 0 goto label16;

        l9 = l3#2 + 8;

        goto label17;

     label16:
        $stack130 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack131 = l3#2 + 8;

        $stack129 = l3#2 + 4;

        $stack132 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack129);

        $i0 = (int) -1;

        $stack133 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Attribute readAttribute(jdk.internal.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>($stack130, $stack102, $stack131, $stack132, l4, $i0, null);

        if $stack133 == null goto label17;

        $stack133.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = l18;

        l18 = $stack133;

     label17:
        $stack134 = l3#2 + 4;

        $stack136 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack134);

        $stack137 = 6 + $stack136;

        l3#2 = l3#2 + $stack137;

        $i1 = (int) -1;

        l19 = l19 + $i1;

        goto label01;

     label18:
        l3#2 = l3#2 + 2;

        $stack31 = l2.<jdk.internal.org.objectweb.asm.Context: int access>;

        $stack30 = l2.<jdk.internal.org.objectweb.asm.Context: java.lang.String name>;

        $stack29 = l2.<jdk.internal.org.objectweb.asm.Context: java.lang.String desc>;

        $stack32 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($stack31, $stack30, $stack29, l8, l7);

        if $stack32 != null goto label19;

        return l3#2;

     label19:
        $stack33 = $stack32 instanceof jdk.internal.org.objectweb.asm.MethodWriter;

        if $stack33 == 0 goto label26;

        l20 = (jdk.internal.org.objectweb.asm.MethodWriter) $stack32;

        $stack86 = l20.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack87 = $stack86.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ClassReader cr>;

        if $stack87 != l0 goto label26;

        $stack89 = l20.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        if l8 != $stack89 goto label26;

        l21#41 = 0;

        if l7 != null goto label22;

        $stack99 = l20.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if $stack99 != 0 goto label20;

        $stack100 = 1;

        goto label21;

     label20:
        $stack100 = 0;

     label21:
        l21#41 = $stack100;

        goto label25;

     label22:
        $stack91 = lengthof l7;

        $stack90 = l20.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if $stack91 != $stack90 goto label25;

        l21#41 = 1;

        $stack93 = lengthof l7;

        l22 = $stack93 - 1;

     label23:
        if l22 < 0 goto label25;

        $i2 = (int) -2;

        l6 = l6 + $i2;

        $stack95 = l20.<jdk.internal.org.objectweb.asm.MethodWriter: int[] exceptions>;

        $stack96 = $stack95[l22];

        $stack97 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l6);

        if $stack96 == $stack97 goto label24;

        l21#41 = 0;

        goto label25;

     label24:
        $i3 = (int) -1;

        l22 = l22 + $i3;

        goto label23;

     label25:
        if l21#41 == 0 goto label26;

        l20.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderOffset> = l17;

        $stack92 = l3#2 - l17;

        l20.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderLength> = $stack92;

        return l3#2;

     label26:
        if l9 == 0 goto label28;

        $stack79 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack80 = $stack79[l9];

        $i4 = (int) $stack80;

        l20#48 = $i4 & 255;

        l21 = l9 + 1;

     label27:
        if l20#48 <= 0 goto label28;

        $stack82 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l21, l4);

        $stack83 = l21 + 2;

        $stack84 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack83);

        virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitParameter(java.lang.String,int)>($stack82, $stack84);

        $i5 = (int) -1;

        l20#48 = l20#48 + $i5;

        l21 = l21 + 4;

        goto label27;

     label28:
        if l14 == 0 goto label29;

        $stack76 = virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()>();

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>(l14, l4, null, $stack76);

        if $stack76 == null goto label29;

        virtualinvoke $stack76.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visitEnd()>();

     label29:
        if l10 == 0 goto label31;

        l20#48 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l10);

        l21 = l10 + 2;

     label30:
        if l20#48 <= 0 goto label31;

        $stack70 = l21 + 2;

        $stack72 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l21, l4);

        $stack73 = virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack72, 1);

        l21 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack70, l4, 1, $stack73);

        $i6 = (int) -1;

        l20#48 = l20#48 + $i6;

        goto label30;

     label31:
        if l11 == 0 goto label33;

        l20#48 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l11);

        l21 = l11 + 2;

     label32:
        if l20#48 <= 0 goto label33;

        $stack62 = l21 + 2;

        $stack64 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l21, l4);

        $stack65 = virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack64, 0);

        l21 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack62, l4, 1, $stack65);

        $i7 = (int) -1;

        l20#48 = l20#48 + $i7;

        goto label32;

     label33:
        if l12 == 0 goto label35;

        l20#48 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l12);

        l21 = l12 + 2;

     label34:
        if l20#48 <= 0 goto label35;

        $stack51 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, l21);

        $stack52 = $stack51 + 2;

        $stack54 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack55 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack56 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack51, l4);

        $stack57 = virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack54, $stack55, $stack56, 1);

        l21 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack52, l4, 1, $stack57);

        $i8 = (int) -1;

        l20#48 = l20#48 + $i8;

        goto label34;

     label35:
        if l13 == 0 goto label37;

        l20#48 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l13);

        l21 = l13 + 2;

     label36:
        if l20#48 <= 0 goto label37;

        $stack40 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, l21);

        $stack41 = $stack40 + 2;

        $stack43 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack44 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack45 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack40, l4);

        $stack46 = virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack43, $stack44, $stack45, 0);

        l21 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack41, l4, 1, $stack46);

        $i9 = (int) -1;

        l20#48 = l20#48 + $i9;

        goto label36;

     label37:
        if l15 == 0 goto label38;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void readParameterAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>($stack32, l2, l15, 1);

     label38:
        if l16 == 0 goto label39;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void readParameterAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>($stack32, l2, l16, 0);

     label39:
        if l18 == null goto label40;

        l20#65 = l18.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        l18.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = null;

        virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(l18);

        l18 = l20#65;

        goto label39;

     label40:
        if l5 == 0 goto label41;

        virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitCode()>();

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>($stack32, l2, l5);

     label41:
        virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitEnd()>();

        return l3#2;
    }

Method: readCode
    private void readCode(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.internal.org.objectweb.asm.Context, int)
    {
        jdk.internal.org.objectweb.asm.Context l2, l25;
        int[] $stack68, $stack87, $stack248, $stack250, $stack257, $stack267, $stack273, $stack421, $stack429, $stack497, l12#16, l13#17, l32, l27#130;
        int $stack37, $stack38, $stack39, $stack40, $stack41, l9, l10, $stack42, $stack44, $stack47, $stack48, $stack51, $stack52, $stack54, $stack55, $stack56, $stack57, $stack60, $stack61, $stack62, $stack64, $stack72, $stack74, $stack75, $stack76, $stack79, $stack80, $stack81, $stack83, $stack93, $stack94, $stack95, $stack96, $stack97, $stack106, $stack123, $stack126, $stack127, $stack128, $stack129, $stack131, $stack132, $stack138, $stack139, $stack140, $stack141, $stack149, $stack151, $stack152, $stack155, $stack156, $stack158, $stack159, $stack160, $stack161, $stack163, $stack164, $stack165, $stack167, $stack174, $stack175, $stack177, $stack178, $stack179, $stack180, $stack182, $stack183, $stack184, $stack186, $stack193, $stack194, $stack195, $stack197, $stack198, $stack199, $stack200, $stack201, $stack203, $stack204, $stack205, $stack206, $stack210, $stack211, $stack212, $stack213, $stack214, $stack215, $stack216, $stack217, $stack218, $stack219, $stack221, $stack222, $stack226, $stack228, $stack231, $stack232, $stack234, $stack238, $stack239, $stack240, $stack241, $stack243, $stack245, $stack247, $stack249, $stack251, $stack252, $stack254, $stack255, $stack256, $stack258, $stack260, $stack262, $stack266, $stack268, $stack269, $stack272, $stack274, $stack276, $stack288, $stack298, $stack300, $stack301, $stack302, $stack303, $stack304, $stack305, $stack306, $stack309, $stack311, $stack313, $stack315, $stack318, $stack319, $stack323, $stack325, $stack328, $stack330, $stack331, $stack338, $stack346, $stack347, $stack348, $stack349, $stack360, $stack361, $stack362, $stack367, $stack384, $stack397, $stack399, $stack400, $stack401, $stack403, $stack404, $stack410, $stack412, $stack414, $stack415, $stack416, $stack418, $stack420, $stack422, $stack423, $stack424, $stack425, $stack426, $stack428, $stack430, $stack431, $stack432, $stack433, $stack434, $stack436, $stack437, $stack438, $stack440, $stack441, $stack443, $stack445, $stack448, $stack449, $stack455, $stack456, $stack457, $stack459, $stack460, $stack462, $stack463, $stack467, $stack468, $stack470, $stack471, $stack476, $stack487, $stack488, $stack490, $stack491, $stack493, $stack494, $stack496, $stack498, $stack499, $stack505, $stack509, $stack510, $stack511, $stack512, $stack514, $stack516, $stack517, $stack518, $stack521, $stack522, $stack523, $stack524, $stack526, $stack527, $stack528, $stack529, $stack530, $stack531, $stack532, $stack533, $stack536, $stack537, $stack538, $stack540, $stack542, l3, l3#2, l12, l14, l15, l16, l17, l18, l19, l22, l23, l24, l27, l29, l30, $stack435, $stack427, $stack385, $stack387, $stack388, $stack352, $stack353, l34, l31, l35, $stack181, $stack162, l28#132, l33#143, $stack98, $stack100, $stack102, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        jdk.internal.org.objectweb.asm.MethodVisitor l1;
        java.lang.String $stack69, $stack88, $stack169, $stack188, $stack259, $stack261, $stack271, $stack275, $stack277, $stack299, $stack314, $stack368, $stack369, $stack371, $stack373, $stack375, $stack377, $stack379, $stack381, $stack392, $stack500, l32#142, $stack99, $stack101;
        jdk.internal.org.objectweb.asm.Label[] $stack43, $stack66, $stack67, $stack85, $stack86, l33;
        char[] l5;
        boolean l21, $stack370, $stack372, $stack374, $stack376, $stack378, $stack380, $stack382, $stack393, l20, $stack479, $stack280, l20#24_2;
        jdk.internal.org.objectweb.asm.TypePath $stack65, $stack84, $stack168, $stack187;
        byte[] l4, $stack147, $stack503;
        byte $stack146, $stack148, $stack150, $stack227, $stack229, $stack235, $stack270, $stack307, $stack312, $stack316, $stack355, $stack363, $stack502, $stack504, $stack506;
        java.lang.Object[] $stack322, $stack324, $stack327, $stack329, $stack350, $stack351, l34#117;
        short $stack196, $stack230, $stack236, $stack244, $stack308, $stack310, $stack317, $stack342, $stack364, $stack541, l13, l29#93, $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8;
        jdk.internal.org.objectweb.asm.Attribute[] $stack383, $stack390, $stack396;
        java.lang.Object $stack233, $stack237, $stack253, $stack263;
        jdk.internal.org.objectweb.asm.Handle l32#115;
        jdk.internal.org.objectweb.asm.Attribute $stack391, $stack398, $stack402, l26, l27#200;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack70, $stack89, $stack170, $stack189;
        jdk.internal.org.objectweb.asm.Label $stack50, $stack143, $stack202, $stack207, $stack220, $stack223, $stack242, $stack246, $stack442, $stack444, $stack447, $stack461, $stack464, $stack466, $stack469, $stack489, $stack492, $stack495, l28, $stack104, $stack103;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.MethodVisitor;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Context;

        l3 := @parameter2: int;

        l4 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        l5 = l2.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack37 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3);

        $stack38 = l3 + 2;

        $stack39 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack38);

        $stack40 = l3 + 4;

        $stack41 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack40);

        l3#2 = l3 + 8;

        l9 = l3#2;

        l10 = l3#2 + $stack41;

        $stack42 = $stack41 + 2;

        $stack43 = newarray (jdk.internal.org.objectweb.asm.Label)[$stack42];

        l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels> = $stack43;

        $stack44 = $stack41 + 1;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack44, $stack43);

     label001:
        if l3#2 >= l10 goto label018;

        l12 = l3#2 - l9;

        $stack502 = l4[l3#2];

        $s0 = (short) $stack502;

        l13 = $s0 & 255;

        $stack503 = <jdk.internal.org.objectweb.asm.ClassWriter: byte[] TYPE>;

        $i0 = (int) l13;

        $stack504 = $stack503[$i0];

        $i1 = (int) $stack504;

        tableswitch($i1)
        {
            case 0: goto label002;
            case 1: goto label013;
            case 2: goto label014;
            case 3: goto label013;
            case 4: goto label002;
            case 5: goto label014;
            case 6: goto label014;
            case 7: goto label015;
            case 8: goto label015;
            case 9: goto label003;
            case 10: goto label004;
            case 11: goto label013;
            case 12: goto label014;
            case 13: goto label014;
            case 14: goto label007;
            case 15: goto label010;
            case 16: goto label016;
            case 17: goto label005;
            default: goto label016;
        };

     label002:
        l3#2 = l3#2 + 1;

        goto label017;

     label003:
        $stack540 = l3#2 + 1;

        $stack541 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack540);

        $i2 = (int) $stack541;

        $stack542 = l12 + $i2;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack542, $stack43);

        l3#2 = l3#2 + 3;

        goto label017;

     label004:
        $stack536 = l3#2 + 1;

        $stack537 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack536);

        $stack538 = l12 + $stack537;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack538, $stack43);

        l3#2 = l3#2 + 5;

        goto label017;

     label005:
        $stack505 = l3#2 + 1;

        $stack506 = l4[$stack505];

        $s1 = (short) $stack506;

        l13 = $s1 & 255;

        $i3 = (int) l13;

        if $i3 != 132 goto label006;

        l3#2 = l3#2 + 6;

        goto label017;

     label006:
        l3#2 = l3#2 + 4;

        goto label017;

     label007:
        $stack522 = l3#2 + 4;

        $stack521 = l12 & 3;

        l3#2 = $stack522 - $stack521;

        $stack523 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#2);

        $stack524 = l12 + $stack523;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack524, $stack43);

        $stack526 = l3#2 + 8;

        $stack527 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack526);

        $stack528 = l3#2 + 4;

        $stack529 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack528);

        $stack530 = $stack527 - $stack529;

        l14 = $stack530 + 1;

     label008:
        if l14 <= 0 goto label009;

        $stack531 = l3#2 + 12;

        $stack532 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack531);

        $stack533 = l12 + $stack532;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack533, $stack43);

        l3#2 = l3#2 + 4;

        $i4 = (int) -1;

        l14 = l14 + $i4;

        goto label008;

     label009:
        l3#2 = l3#2 + 12;

        goto label017;

     label010:
        $stack510 = l3#2 + 4;

        $stack509 = l12 & 3;

        l3#2 = $stack510 - $stack509;

        $stack511 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#2);

        $stack512 = l12 + $stack511;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack512, $stack43);

        $stack514 = l3#2 + 4;

        l14 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack514);

     label011:
        if l14 <= 0 goto label012;

        $stack516 = l3#2 + 12;

        $stack517 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack516);

        $stack518 = l12 + $stack517;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack518, $stack43);

        l3#2 = l3#2 + 8;

        $i5 = (int) -1;

        l14 = l14 + $i5;

        goto label011;

     label012:
        l3#2 = l3#2 + 8;

        goto label017;

     label013:
        l3#2 = l3#2 + 2;

        goto label017;

     label014:
        l3#2 = l3#2 + 3;

        goto label017;

     label015:
        l3#2 = l3#2 + 5;

        goto label017;

     label016:
        l3#2 = l3#2 + 4;

     label017:
        goto label001;

     label018:
        l12 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#2);

     label019:
        if l12 <= 0 goto label020;

        $stack487 = l3#2 + 2;

        $stack488 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack487);

        $stack489 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack488, $stack43);

        $stack490 = l3#2 + 4;

        $stack491 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack490);

        $stack492 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack491, $stack43);

        $stack493 = l3#2 + 6;

        $stack494 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack493);

        $stack495 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack494, $stack43);

        $stack497 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack496 = l3#2 + 8;

        $stack498 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack496);

        $stack499 = $stack497[$stack498];

        $stack500 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack499, l5);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitTryCatchBlock(jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,java.lang.String)>($stack489, $stack492, $stack495, $stack500);

        l3#2 = l3#2 + 8;

        $i6 = (int) -1;

        l12 = l12 + $i6;

        goto label019;

     label020:
        l3#2 = l3#2 + 2;

        l12#16 = null;

        l13#17 = null;

        l14 = 0;

        l15 = 0;

        $i7 = (int) -1;

        l16 = $i7;

        $i8 = (int) -1;

        l17 = $i8;

        l18 = 0;

        l19 = 0;

        l20 = 1;

        l20#24_2 = 1;

        l20 = 1;

        $stack47 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack48 = $stack47 & 8;

        if $stack48 == 0 goto label021;

        $stack479 = 1;

        goto label022;

     label021:
        $stack479 = 0;

     label022:
        l21 = $stack479;

        l22 = 0;

        l23 = 0;

        l24 = 0;

        l25 = null;

        l26 = null;

        l27 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#2);

     label023:
        if l27 <= 0 goto label047;

        $stack367 = l3#2 + 2;

        $stack368 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack367, l5);

        $stack369 = "LocalVariableTable";

        $stack370 = virtualinvoke $stack369.<java.lang.String: boolean equals(java.lang.Object)>($stack368);

        if $stack370 == 0 goto label028;

        $stack455 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack456 = $stack455 & 2;

        if $stack456 != 0 goto label046;

        l18 = l3#2 + 8;

        $stack457 = l3#2 + 8;

        l29 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack457);

        l30 = l3#2;

     label024:
        if l29 <= 0 goto label027;

        $stack459 = l30 + 10;

        $stack460 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack459);

        $stack461 = $stack43[$stack460];

        if $stack461 != null goto label025;

        $stack469 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack460, $stack43);

        $stack470 = $stack469.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack471 = $stack470 | 1;

        $stack469.<jdk.internal.org.objectweb.asm.Label: int status> = $stack471;

     label025:
        $stack462 = l30 + 12;

        $stack463 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack462);

        $stack476 = $stack460 + $stack463;

        $stack464 = $stack43[$stack476];

        if $stack464 != null goto label026;

        $stack466 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack476, $stack43);

        $stack467 = $stack466.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack468 = $stack467 | 1;

        $stack466.<jdk.internal.org.objectweb.asm.Label: int status> = $stack468;

     label026:
        l30 = l30 + 10;

        $i9 = (int) -1;

        l29 = l29 + $i9;

        goto label024;

     label027:
        goto label046;

     label028:
        $stack371 = "LocalVariableTypeTable";

        $stack372 = virtualinvoke $stack371.<java.lang.String: boolean equals(java.lang.Object)>($stack368);

        if $stack372 == 0 goto label029;

        l19 = l3#2 + 8;

        goto label046;

     label029:
        $stack373 = "LineNumberTable";

        $stack374 = virtualinvoke $stack373.<java.lang.String: boolean equals(java.lang.Object)>($stack368);

        if $stack374 == 0 goto label033;

        $stack436 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack437 = $stack436 & 2;

        if $stack437 != 0 goto label046;

        $stack438 = l3#2 + 8;

        l29 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack438);

        l30 = l3#2;

     label030:
        if l29 <= 0 goto label032;

        $stack440 = l30 + 10;

        $stack441 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack440);

        $stack442 = $stack43[$stack441];

        if $stack442 != null goto label031;

        $stack447 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack441, $stack43);

        $stack448 = $stack447.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack449 = $stack448 | 1;

        $stack447.<jdk.internal.org.objectweb.asm.Label: int status> = $stack449;

     label031:
        $stack444 = $stack43[$stack441];

        $stack443 = l30 + 12;

        $stack445 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack443);

        $stack444.<jdk.internal.org.objectweb.asm.Label: int line> = $stack445;

        l30 = l30 + 4;

        $i10 = (int) -1;

        l29 = l29 + $i10;

        goto label030;

     label032:
        goto label046;

     label033:
        $stack375 = "RuntimeVisibleTypeAnnotations";

        $stack376 = virtualinvoke $stack375.<java.lang.String: boolean equals(java.lang.Object)>($stack368);

        if $stack376 == 0 goto label037;

        $stack428 = l3#2 + 8;

        $stack429 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] readTypeAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>(l1, l2, $stack428, 1);

        l12#16 = $stack429;

        $stack430 = lengthof $stack429;

        if $stack430 == 0 goto label034;

        $stack431 = $stack429[0];

        $stack432 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack431);

        if $stack432 >= 67 goto label035;

     label034:
        $i11 = (int) -1;

        $stack435 = $i11;

        goto label036;

     label035:
        $stack433 = $stack429[0];

        $stack434 = $stack433 + 1;

        $stack435 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack434);

     label036:
        l16 = $stack435;

        goto label046;

     label037:
        $stack377 = "RuntimeInvisibleTypeAnnotations";

        $stack378 = virtualinvoke $stack377.<java.lang.String: boolean equals(java.lang.Object)>($stack368);

        if $stack378 == 0 goto label041;

        $stack420 = l3#2 + 8;

        $stack421 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] readTypeAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>(l1, l2, $stack420, 0);

        l13#17 = $stack421;

        $stack422 = lengthof $stack421;

        if $stack422 == 0 goto label038;

        $stack423 = $stack421[0];

        $stack424 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack423);

        if $stack424 >= 67 goto label039;

     label038:
        $i12 = (int) -1;

        $stack427 = $i12;

        goto label040;

     label039:
        $stack425 = $stack421[0];

        $stack426 = $stack425 + 1;

        $stack427 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack426);

     label040:
        l17 = $stack427;

        goto label046;

     label041:
        $stack379 = "StackMapTable";

        $stack380 = virtualinvoke $stack379.<java.lang.String: boolean equals(java.lang.Object)>($stack368);

        if $stack380 == 0 goto label042;

        $stack414 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack415 = $stack414 & 4;

        if $stack415 != 0 goto label046;

        l22 = l3#2 + 10;

        $stack416 = l3#2 + 4;

        l23 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack416);

        $stack418 = l3#2 + 8;

        l24 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack418);

        goto label046;

     label042:
        $stack381 = "StackMap";

        $stack382 = virtualinvoke $stack381.<java.lang.String: boolean equals(java.lang.Object)>($stack368);

        if $stack382 == 0 goto label043;

        $stack403 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack404 = $stack403 & 4;

        if $stack404 != 0 goto label046;

        l20 = 0;

        l20#24_2 = 0;

        l20 = 0;

        l22 = l3#2 + 10;

        $stack410 = l3#2 + 4;

        l23 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack410);

        $stack412 = l3#2 + 8;

        l24 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack412);

        goto label046;

     label043:
        l29 = 0;

     label044:
        $stack383 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack384 = lengthof $stack383;

        if l29 >= $stack384 goto label046;

        $stack390 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack391 = $stack390[l29];

        $stack392 = $stack391.<jdk.internal.org.objectweb.asm.Attribute: java.lang.String type>;

        $stack393 = virtualinvoke $stack392.<java.lang.String: boolean equals(java.lang.Object)>($stack368);

        if $stack393 == 0 goto label045;

        $stack396 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack398 = $stack396[l29];

        $stack399 = l3#2 + 8;

        $stack397 = l3#2 + 4;

        $stack400 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack397);

        $stack401 = l9 - 8;

        $stack402 = virtualinvoke $stack398.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute read(jdk.internal.org.objectweb.asm.ClassReader,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>(l0, $stack399, $stack400, l5, $stack401, $stack43);

        if $stack402 == null goto label045;

        $stack402.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = l26;

        l26 = $stack402;

     label045:
        l29 = l29 + 1;

        goto label044;

     label046:
        $stack385 = l3#2 + 4;

        $stack387 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack385);

        $stack388 = 6 + $stack387;

        l3#2 = l3#2 + $stack388;

        $i13 = (int) -1;

        l27 = l27 + $i13;

        goto label023;

     label047:
        if l22 == 0 goto label051;

        l25 = l2;

        $i14 = (int) -1;

        l2.<jdk.internal.org.objectweb.asm.Context: int offset> = $i14;

        l2.<jdk.internal.org.objectweb.asm.Context: int mode> = 0;

        l2.<jdk.internal.org.objectweb.asm.Context: int localCount> = 0;

        l2.<jdk.internal.org.objectweb.asm.Context: int localDiff> = 0;

        l2.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        $stack350 = newarray (java.lang.Object)[$stack39];

        l2.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local> = $stack350;

        $stack351 = newarray (java.lang.Object)[$stack37];

        l2.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack> = $stack351;

        if l21 == 0 goto label048;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: void getImplicitFrame(jdk.internal.org.objectweb.asm.Context)>(l2);

     label048:
        l27 = l22;

     label049:
        $stack352 = l22 + l23;

        $stack353 = $stack352 - 2;

        if l27 >= $stack353 goto label051;

        $stack355 = l4[l27];

        $i15 = (int) $stack355;

        if $i15 != 8 goto label050;

        $stack360 = l27 + 1;

        $stack361 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack360);

        if $stack361 < 0 goto label050;

        if $stack361 >= $stack41 goto label050;

        $stack362 = l9 + $stack361;

        $stack363 = l4[$stack362];

        $s2 = (short) $stack363;

        $stack364 = $s2 & 255;

        $i16 = (int) $stack364;

        if $i16 != 187 goto label050;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack361, $stack43);

     label050:
        l27 = l27 + 1;

        goto label049;

     label051:
        l3#2 = l9;

     label052:
        if l3#2 >= l10 goto label102;

        l27 = l3#2 - l9;

        l28 = $stack43[l27];

        if l28 == null goto label053;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLabel(jdk.internal.org.objectweb.asm.Label)>(l28);

        $stack346 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack347 = $stack346 & 2;

        if $stack347 != 0 goto label053;

        $stack348 = l28.<jdk.internal.org.objectweb.asm.Label: int line>;

        if $stack348 <= 0 goto label053;

        $stack349 = l28.<jdk.internal.org.objectweb.asm.Label: int line>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLineNumber(int,jdk.internal.org.objectweb.asm.Label)>($stack349, l28);

     label053:
        if l25 == null goto label059;

        $stack318 = l25.<jdk.internal.org.objectweb.asm.Context: int offset>;

        if $stack318 == l27 goto label054;

        $stack338 = l25.<jdk.internal.org.objectweb.asm.Context: int offset>;

        $i17 = (int) -1;

        if $stack338 != $i17 goto label059;

     label054:
        $stack319 = l25.<jdk.internal.org.objectweb.asm.Context: int offset>;

        $i18 = (int) -1;

        if $stack319 == $i18 goto label057;

        if l20 == 0 goto label055;

        if l21 == 0 goto label056;

     label055:
        $stack325 = l25.<jdk.internal.org.objectweb.asm.Context: int localCount>;

        $stack324 = l25.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        $stack323 = l25.<jdk.internal.org.objectweb.asm.Context: int stackCount>;

        $stack322 = l25.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        $i19 = (int) -1;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>($i19, $stack325, $stack324, $stack323, $stack322);

        goto label057;

     label056:
        $stack331 = l25.<jdk.internal.org.objectweb.asm.Context: int mode>;

        $stack330 = l25.<jdk.internal.org.objectweb.asm.Context: int localDiff>;

        $stack329 = l25.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        $stack328 = l25.<jdk.internal.org.objectweb.asm.Context: int stackCount>;

        $stack327 = l25.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>($stack331, $stack330, $stack329, $stack328, $stack327);

     label057:
        if l24 <= 0 goto label058;

        l22 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readFrame(int,boolean,boolean,jdk.internal.org.objectweb.asm.Context)>(l22, l20#24_2, l21, l25);

        $i20 = (int) -1;

        l24 = l24 + $i20;

        goto label053;

     label058:
        l25 = null;

        goto label053;

     label059:
        $stack146 = l4[l3#2];

        $s3 = (short) $stack146;

        $stack342 = $s3 & 255;

        $stack147 = <jdk.internal.org.objectweb.asm.ClassWriter: byte[] TYPE>;

        $i21 = (int) $stack342;

        $stack148 = $stack147[$i21];

        $i22 = (int) $stack148;

        tableswitch($i22)
        {
            case 0: goto label060;
            case 1: goto label075;
            case 2: goto label076;
            case 3: goto label074;
            case 4: goto label061;
            case 5: goto label088;
            case 6: goto label079;
            case 7: goto label079;
            case 8: goto label085;
            case 9: goto label064;
            case 10: goto label065;
            case 11: goto label077;
            case 12: goto label078;
            case 13: goto label089;
            case 14: goto label068;
            case 15: goto label071;
            case 16: goto label090;
            case 17: goto label066;
            default: goto label090;
        };

     label060:
        $i23 = (int) $stack342;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitInsn(int)>($i23);

        l3#2 = l3#2 + 1;

        goto label091;

     label061:
        $i24 = (int) $stack342;

        if $i24 <= 54 goto label062;

        $i25 = (int) $stack342;

        $i26 = (int) -59;

        l29 = $i25 + $i26;

        $stack303 = l29 >> 2;

        $stack305 = 54 + $stack303;

        $stack304 = l29 & 3;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>($stack305, $stack304);

        goto label063;

     label062:
        $i27 = (int) $stack342;

        $i28 = (int) -26;

        l29 = $i27 + $i28;

        $stack300 = l29 >> 2;

        $stack302 = 21 + $stack300;

        $stack301 = l29 & 3;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>($stack302, $stack301);

     label063:
        l3#2 = l3#2 + 1;

        goto label091;

     label064:
        $stack243 = l3#2 + 1;

        $stack244 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack243);

        $i29 = (int) $stack244;

        $stack245 = l27 + $i29;

        $stack246 = $stack43[$stack245];

        $i30 = (int) $stack342;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,jdk.internal.org.objectweb.asm.Label)>($i30, $stack246);

        l3#2 = l3#2 + 3;

        goto label091;

     label065:
        $i31 = (int) $stack342;

        $stack239 = $i31 - 33;

        $stack238 = l3#2 + 1;

        $stack240 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack238);

        $stack241 = l27 + $stack240;

        $stack242 = $stack43[$stack241];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,jdk.internal.org.objectweb.asm.Label)>($stack239, $stack242);

        l3#2 = l3#2 + 5;

        goto label091;

     label066:
        $stack149 = l3#2 + 1;

        $stack150 = l4[$stack149];

        $s4 = (short) $stack150;

        l29#93 = $s4 & 255;

        $i32 = (int) l29#93;

        if $i32 != 132 goto label067;

        $stack193 = l3#2 + 2;

        $stack194 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack193);

        $stack195 = l3#2 + 4;

        $stack196 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack195);

        $i33 = (int) $stack196;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>($stack194, $i33);

        l3#2 = l3#2 + 6;

        goto label091;

     label067:
        $stack151 = l3#2 + 2;

        $stack152 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack151);

        $i34 = (int) l29#93;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>($i34, $stack152);

        l3#2 = l3#2 + 4;

        goto label091;

     label068:
        $stack211 = l3#2 + 4;

        $stack210 = l27 & 3;

        l3#2 = $stack211 - $stack210;

        $stack212 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#2);

        l30 = l27 + $stack212;

        $stack213 = l3#2 + 4;

        $stack214 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack213);

        $stack215 = l3#2 + 8;

        $stack216 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack215);

        $stack217 = $stack216 - $stack214;

        $stack218 = $stack217 + 1;

        l33 = newarray (jdk.internal.org.objectweb.asm.Label)[$stack218];

        l3#2 = l3#2 + 12;

        l34 = 0;

     label069:
        $stack219 = lengthof l33;

        if l34 >= $stack219 goto label070;

        $stack221 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#2);

        $stack222 = l27 + $stack221;

        $stack223 = $stack43[$stack222];

        l33[l34] = $stack223;

        l3#2 = l3#2 + 4;

        l34 = l34 + 1;

        goto label069;

     label070:
        $stack220 = $stack43[l30];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitTableSwitchInsn(int,int,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label[])>($stack214, $stack216, $stack220, l33);

        goto label091;

     label071:
        $stack198 = l3#2 + 4;

        $stack197 = l27 & 3;

        l3#2 = $stack198 - $stack197;

        $stack199 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#2);

        l30 = l27 + $stack199;

        $stack200 = l3#2 + 4;

        $stack201 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack200);

        l32 = newarray (int)[$stack201];

        l33 = newarray (jdk.internal.org.objectweb.asm.Label)[$stack201];

        l3#2 = l3#2 + 8;

        l34 = 0;

     label072:
        if l34 >= $stack201 goto label073;

        $stack203 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#2);

        l32[l34] = $stack203;

        $stack204 = l3#2 + 4;

        $stack205 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack204);

        $stack206 = l27 + $stack205;

        $stack207 = $stack43[$stack206];

        l33[l34] = $stack207;

        l3#2 = l3#2 + 8;

        l34 = l34 + 1;

        goto label072;

     label073:
        $stack202 = $stack43[l30];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLookupSwitchInsn(jdk.internal.org.objectweb.asm.Label,int[],jdk.internal.org.objectweb.asm.Label[])>($stack202, l32, l33);

        goto label091;

     label074:
        $stack306 = l3#2 + 1;

        $stack307 = l4[$stack306];

        $s5 = (short) $stack307;

        $stack308 = $s5 & 255;

        $i35 = (int) $stack342;

        $i36 = (int) $stack308;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>($i35, $i36);

        l3#2 = l3#2 + 2;

        goto label091;

     label075:
        $stack311 = l3#2 + 1;

        $stack312 = l4[$stack311];

        $i37 = (int) $stack342;

        $i38 = (int) $stack312;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>($i37, $i38);

        l3#2 = l3#2 + 2;

        goto label091;

     label076:
        $stack309 = l3#2 + 1;

        $stack310 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack309);

        $i39 = (int) $stack342;

        $i40 = (int) $stack310;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>($i39, $i40);

        l3#2 = l3#2 + 3;

        goto label091;

     label077:
        $stack234 = l3#2 + 1;

        $stack235 = l4[$stack234];

        $s6 = (short) $stack235;

        $stack236 = $s6 & 255;

        $i41 = (int) $stack236;

        $stack237 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($i41, l5);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>($stack237);

        l3#2 = l3#2 + 2;

        goto label091;

     label078:
        $stack231 = l3#2 + 1;

        $stack232 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack231);

        $stack233 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack232, l5);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>($stack233);

        l3#2 = l3#2 + 3;

        goto label091;

     label079:
        $stack267 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack266 = l3#2 + 1;

        $stack268 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack266);

        l30 = $stack267[$stack268];

        $stack269 = l30 - 1;

        $stack270 = l4[$stack269];

        $i42 = (int) $stack270;

        if $i42 != 11 goto label080;

        $stack280 = 1;

        goto label081;

     label080:
        $stack280 = 0;

     label081:
        $stack271 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l30, l5);

        $stack273 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack272 = l30 + 2;

        $stack274 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack272);

        $stack288 = $stack273[$stack274];

        $stack275 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack288, l5);

        $stack276 = $stack288 + 2;

        $stack277 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack276, l5);

        $i43 = (int) $stack342;

        if $i43 >= 182 goto label082;

        $i44 = (int) $stack342;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>($i44, $stack271, $stack275, $stack277);

        goto label083;

     label082:
        $i45 = (int) $stack342;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)>($i45, $stack271, $stack275, $stack277, $stack280);

     label083:
        $i46 = (int) $stack342;

        if $i46 != 185 goto label084;

        l3#2 = l3#2 + 5;

        goto label091;

     label084:
        l3#2 = l3#2 + 3;

        goto label091;

     label085:
        $stack248 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack247 = l3#2 + 1;

        $stack249 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack247);

        l30 = $stack248[$stack249];

        $stack250 = l2.<jdk.internal.org.objectweb.asm.Context: int[] bootstrapMethods>;

        $stack251 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l30);

        l31 = $stack250[$stack251];

        $stack252 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l31);

        $stack253 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack252, l5);

        l32#115 = (jdk.internal.org.objectweb.asm.Handle) $stack253;

        $stack254 = l31 + 2;

        $stack255 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack254);

        l34#117 = newarray (java.lang.Object)[$stack255];

        l31 = l31 + 4;

        l35 = 0;

     label086:
        if l35 >= $stack255 goto label087;

        $stack262 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l31);

        $stack263 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack262, l5);

        l34#117[l35] = $stack263;

        l31 = l31 + 2;

        l35 = l35 + 1;

        goto label086;

     label087:
        $stack257 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack256 = l30 + 2;

        $stack258 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack256);

        l30 = $stack257[$stack258];

        $stack259 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l30, l5);

        $stack260 = l30 + 2;

        $stack261 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack260, l5);

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>($stack259, $stack261, l32#115, l34#117);

        l3#2 = l3#2 + 5;

        goto label091;

     label088:
        $stack298 = l3#2 + 1;

        $stack299 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack298, l5);

        $i47 = (int) $stack342;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>($i47, $stack299);

        l3#2 = l3#2 + 3;

        goto label091;

     label089:
        $stack226 = l3#2 + 1;

        $stack227 = l4[$stack226];

        $s7 = (short) $stack227;

        $stack230 = $s7 & 255;

        $stack228 = l3#2 + 2;

        $stack229 = l4[$stack228];

        $i48 = (int) $stack230;

        $i49 = (int) $stack229;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>($i48, $i49);

        l3#2 = l3#2 + 3;

        goto label091;

     label090:
        $stack313 = l3#2 + 1;

        $stack314 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack313, l5);

        $stack315 = l3#2 + 3;

        $stack316 = l4[$stack315];

        $s8 = (short) $stack316;

        $stack317 = $s8 & 255;

        $i50 = (int) $stack317;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>($stack314, $i50);

        l3#2 = l3#2 + 4;

     label091:
        if l12#16 == null goto label096;

        $stack174 = lengthof l12#16;

        if l14 >= $stack174 goto label096;

        if l16 > l27 goto label096;

        if l16 != l27 goto label092;

        $stack182 = l12#16[l14];

        $stack183 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, $stack182);

        $stack184 = $stack183 + 2;

        $stack186 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack187 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack188 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack183, l5);

        $stack189 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack186, $stack187, $stack188, 1);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack184, l5, 1, $stack189);

     label092:
        l14 = l14 + 1;

        $stack175 = lengthof l12#16;

        if l14 >= $stack175 goto label093;

        $stack177 = l12#16[l14];

        $stack178 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack177);

        if $stack178 >= 67 goto label094;

     label093:
        $i51 = (int) -1;

        $stack181 = $i51;

        goto label095;

     label094:
        $stack179 = l12#16[l14];

        $stack180 = $stack179 + 1;

        $stack181 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack180);

     label095:
        l16 = $stack181;

        goto label091;

     label096:
        if l13#17 == null goto label101;

        $stack155 = lengthof l13#17;

        if l15 >= $stack155 goto label101;

        if l17 > l27 goto label101;

        if l17 != l27 goto label097;

        $stack163 = l13#17[l15];

        $stack164 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, $stack163);

        $stack165 = $stack164 + 2;

        $stack167 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack168 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack169 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack164, l5);

        $stack170 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack167, $stack168, $stack169, 0);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack165, l5, 1, $stack170);

     label097:
        l15 = l15 + 1;

        $stack156 = lengthof l13#17;

        if l15 >= $stack156 goto label098;

        $stack158 = l13#17[l15];

        $stack159 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack158);

        if $stack159 >= 67 goto label099;

     label098:
        $i52 = (int) -1;

        $stack162 = $i52;

        goto label100;

     label099:
        $stack160 = l13#17[l15];

        $stack161 = $stack160 + 1;

        $stack162 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack161);

     label100:
        l17 = $stack162;

        goto label096;

     label101:
        goto label052;

     label102:
        $stack50 = $stack43[$stack41];

        if $stack50 == null goto label103;

        $stack143 = $stack43[$stack41];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLabel(jdk.internal.org.objectweb.asm.Label)>($stack143);

     label103:
        $stack51 = l2.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack52 = $stack51 & 2;

        if $stack52 != 0 goto label110;

        if l18 == 0 goto label110;

        l27#130 = null;

        if l19 == 0 goto label105;

        l3#2 = l19 + 2;

        $stack131 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l19);

        $stack132 = $stack131 * 3;

        l27#130 = newarray (int)[$stack132];

        l28#132 = lengthof l27#130;

     label104:
        if l28#132 <= 0 goto label105;

        $i53 = (int) -1;

        l28#132 = l28#132 + $i53;

        $stack138 = l3#2 + 6;

        l27#130[l28#132] = $stack138;

        $i54 = (int) -1;

        l28#132 = l28#132 + $i54;

        $stack139 = l3#2 + 8;

        $stack140 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack139);

        l27#130[l28#132] = $stack140;

        $i55 = (int) -1;

        l28#132 = l28#132 + $i55;

        $stack141 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#2);

        l27#130[l28#132] = $stack141;

        l3#2 = l3#2 + 10;

        goto label104;

     label105:
        l3#2 = l18 + 2;

        l28#132 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l18);

     label106:
        if l28#132 <= 0 goto label110;

        $stack93 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#2);

        $stack94 = l3#2 + 2;

        $stack95 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack94);

        $stack96 = l3#2 + 8;

        $stack97 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack96);

        l32#142 = null;

        if l27#130 == null goto label109;

        l33#143 = 0;

     label107:
        $stack106 = lengthof l27#130;

        if l33#143 >= $stack106 goto label109;

        $stack123 = l27#130[l33#143];

        if $stack123 != $stack93 goto label108;

        $stack126 = l33#143 + 1;

        $stack127 = l27#130[$stack126];

        if $stack127 != $stack97 goto label108;

        $stack128 = l33#143 + 2;

        $stack129 = l27#130[$stack128];

        l32#142 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack129, l5);

        goto label109;

     label108:
        l33#143 = l33#143 + 3;

        goto label107;

     label109:
        $stack98 = l3#2 + 4;

        $stack99 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack98, l5);

        $stack100 = l3#2 + 6;

        $stack101 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack100, l5);

        $stack104 = $stack43[$stack93];

        $stack102 = $stack93 + $stack95;

        $stack103 = $stack43[$stack102];

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,int)>($stack99, $stack101, l32#142, $stack104, $stack103, $stack97);

        l3#2 = l3#2 + 10;

        $i56 = (int) -1;

        l28#132 = l28#132 + $i56;

        goto label106;

     label110:
        if l12#16 == null goto label113;

        l27 = 0;

     label111:
        $stack72 = lengthof l12#16;

        if l27 >= $stack72 goto label113;

        $stack74 = l12#16[l27];

        $stack75 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack74);

        $stack76 = $stack75 >> 1;

        if $stack76 != 32 goto label112;

        $stack79 = l12#16[l27];

        $stack80 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, $stack79);

        $stack81 = $stack80 + 2;

        $stack83 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack84 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack85 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] start>;

        $stack86 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] end>;

        $stack87 = l2.<jdk.internal.org.objectweb.asm.Context: int[] index>;

        $stack88 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack80, l5);

        $stack89 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.Label[],jdk.internal.org.objectweb.asm.Label[],int[],java.lang.String,boolean)>($stack83, $stack84, $stack85, $stack86, $stack87, $stack88, 1);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack81, l5, 1, $stack89);

     label112:
        l27 = l27 + 1;

        goto label111;

     label113:
        if l13#17 == null goto label116;

        l27 = 0;

     label114:
        $stack54 = lengthof l13#17;

        if l27 >= $stack54 goto label116;

        $stack55 = l13#17[l27];

        $stack56 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack55);

        $stack57 = $stack56 >> 1;

        if $stack57 != 32 goto label115;

        $stack60 = l13#17[l27];

        $stack61 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(l2, $stack60);

        $stack62 = $stack61 + 2;

        $stack64 = l2.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack65 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack66 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] start>;

        $stack67 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] end>;

        $stack68 = l2.<jdk.internal.org.objectweb.asm.Context: int[] index>;

        $stack69 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack61, l5);

        $stack70 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.Label[],jdk.internal.org.objectweb.asm.Label[],int[],java.lang.String,boolean)>($stack64, $stack65, $stack66, $stack67, $stack68, $stack69, 0);

        specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack62, l5, 1, $stack70);

     label115:
        l27 = l27 + 1;

        goto label114;

     label116:
        if l26 == null goto label117;

        l27#200 = l26.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        l26.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = null;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(l26);

        l26 = l27#200;

        goto label116;

     label117:
        virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMaxs(int,int)>($stack37, $stack39);

        return;
    }

Method: readTypeAnnotations
    private int[] readTypeAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.internal.org.objectweb.asm.Context, int, boolean)
    {
        byte[] $stack25;
        int[] l6;
        boolean l4;
        jdk.internal.org.objectweb.asm.TypePath $stack24, $u0;
        jdk.internal.org.objectweb.asm.Context l2;
        int $stack12, $stack13, $stack14, $stack15, $stack18, $stack19, $stack20, $stack26, $stack27, $stack28, $stack37, $stack49, $stack56, $stack57, $stack58, $stack59, $stack63, l3, l3#2, l7, l9, $stack16, $stack17, $i0;
        java.lang.String $stack30;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack31;
        jdk.internal.org.objectweb.asm.Label[] $stack60, $stack62;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        jdk.internal.org.objectweb.asm.MethodVisitor l1;
        char[] l5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.MethodVisitor;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Context;

        l3 := @parameter2: int;

        l4 := @parameter3: boolean;

        l5 = l2.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack12 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3);

        l6 = newarray (int)[$stack12];

        l3#2 = l3 + 2;

        l7 = 0;

     label01:
        $stack13 = lengthof l6;

        if l7 >= $stack13 goto label14;

        l6[l7] = l3#2;

        $stack14 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3#2);

        $stack15 = $stack14 >>> 24;

        lookupswitch($stack15)
        {
            case 0: goto label02;
            case 1: goto label02;
            case 19: goto label03;
            case 20: goto label03;
            case 21: goto label03;
            case 22: goto label02;
            case 64: goto label04;
            case 65: goto label04;
            case 71: goto label07;
            case 72: goto label07;
            case 73: goto label07;
            case 74: goto label07;
            case 75: goto label07;
            default: goto label08;
        };

     label02:
        l3#2 = l3#2 + 2;

        goto label09;

     label03:
        l3#2 = l3#2 + 1;

        goto label09;

     label04:
        $stack49 = l3#2 + 1;

        l9 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack49);

     label05:
        if l9 <= 0 goto label06;

        $stack56 = l3#2 + 3;

        $stack57 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack56);

        $stack58 = l3#2 + 5;

        $stack59 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack58);

        $stack60 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack57, $stack60);

        $stack63 = $stack57 + $stack59;

        $stack62 = l2.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack63, $stack62);

        l3#2 = l3#2 + 6;

        $i0 = (int) -1;

        l9 = l9 + $i0;

        goto label05;

     label06:
        l3#2 = l3#2 + 3;

        goto label09;

     label07:
        l3#2 = l3#2 + 4;

        goto label09;

     label08:
        l3#2 = l3#2 + 3;

     label09:
        $stack16 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>(l3#2);

        $stack17 = $stack14 >>> 24;

        if $stack17 != 66 goto label12;

        if $stack16 != 0 goto label10;

        $stack24 = null;

        goto label11;

     label10:
        $u0 = new jdk.internal.org.objectweb.asm.TypePath;

        $stack24 = $u0;

        $stack25 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.TypePath: void <init>(byte[],int)>($stack25, l3#2);

     label11:
        $stack26 = 2 * $stack16;

        $stack27 = 1 + $stack26;

        $stack37 = l3#2 + $stack27;

        $stack28 = $stack37 + 2;

        $stack30 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack37, l5);

        $stack31 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack14, $stack24, $stack30, l4);

        l3#2 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack28, l5, 1, $stack31);

        goto label13;

     label12:
        $stack19 = l3#2 + 3;

        $stack18 = 2 * $stack16;

        $stack20 = $stack19 + $stack18;

        l3#2 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack20, l5, 1, null);

     label13:
        l7 = l7 + 1;

        goto label01;

     label14:
        return l6;
    }

Method: readAnnotationTarget
    private int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context, int)
    {
        byte[] $stack12;
        int[] $stack25, $stack42;
        jdk.internal.org.objectweb.asm.TypePath $stack11, $u0;
        jdk.internal.org.objectweb.asm.Context l1;
        int $stack8, $stack9, $stack13, $stack14, $stack15, $stack21, $stack22, $stack31, $stack32, $stack33, $stack38, $stack41, $stack43, $stack46, l2, l3, l2#4, l5, $stack47, $stack10, $i0;
        jdk.internal.org.objectweb.asm.Label[] $stack23, $stack24, $stack34, $stack35, $stack37, $stack39;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        jdk.internal.org.objectweb.asm.Label $stack36, $stack40;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Context;

        l2 := @parameter1: int;

        $stack8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l2);

        $stack9 = $stack8 >>> 24;

        lookupswitch($stack9)
        {
            case 0: goto label01;
            case 1: goto label01;
            case 19: goto label02;
            case 20: goto label02;
            case 21: goto label02;
            case 22: goto label01;
            case 64: goto label03;
            case 65: goto label03;
            case 71: goto label06;
            case 72: goto label06;
            case 73: goto label06;
            case 74: goto label06;
            case 75: goto label06;
            default: goto label07;
        };

     label01:
        l3 = $stack8 & -65536;

        l2#4 = l2 + 2;

        goto label10;

     label02:
        l3 = $stack8 & -16777216;

        l2#4 = l2 + 1;

        goto label10;

     label03:
        l3 = $stack8 & -16777216;

        $stack21 = l2 + 1;

        $stack22 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack21);

        $stack23 = newarray (jdk.internal.org.objectweb.asm.Label)[$stack22];

        l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] start> = $stack23;

        $stack24 = newarray (jdk.internal.org.objectweb.asm.Label)[$stack22];

        l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] end> = $stack24;

        $stack25 = newarray (int)[$stack22];

        l1.<jdk.internal.org.objectweb.asm.Context: int[] index> = $stack25;

        l2#4 = l2 + 3;

        l5 = 0;

     label04:
        if l5 >= $stack22 goto label05;

        $stack31 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l2#4);

        $stack32 = l2#4 + 2;

        $stack33 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack32);

        $stack35 = l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] start>;

        $stack34 = l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        $stack36 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack31, $stack34);

        $stack35[l5] = $stack36;

        $stack39 = l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] end>;

        $stack38 = $stack31 + $stack33;

        $stack37 = l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        $stack40 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack38, $stack37);

        $stack39[l5] = $stack40;

        $stack42 = l1.<jdk.internal.org.objectweb.asm.Context: int[] index>;

        $stack41 = l2#4 + 4;

        $stack43 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack41);

        $stack42[l5] = $stack43;

        l2#4 = l2#4 + 6;

        l5 = l5 + 1;

        goto label04;

     label05:
        goto label10;

     label06:
        l3 = $stack8 & -16776961;

        l2#4 = l2 + 4;

        goto label10;

     label07:
        $stack46 = $stack8 >>> 24;

        if $stack46 >= 67 goto label08;

        $i0 = (int) -256;

        $stack47 = $i0;

        goto label09;

     label08:
        $stack47 = -16777216;

     label09:
        l3 = $stack8 & $stack47;

        l2#4 = l2 + 3;

     label10:
        $stack10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>(l2#4);

        l1.<jdk.internal.org.objectweb.asm.Context: int typeRef> = l3;

        if $stack10 != 0 goto label11;

        $stack11 = null;

        goto label12;

     label11:
        $u0 = new jdk.internal.org.objectweb.asm.TypePath;

        $stack11 = $u0;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.TypePath: void <init>(byte[],int)>($stack12, l2#4);

     label12:
        l1.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath> = $stack11;

        $stack14 = l2#4 + 1;

        $stack13 = 2 * $stack10;

        $stack15 = $stack14 + $stack13;

        return $stack15;
    }

Method: readParameterAnnotations
    private void readParameterAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.internal.org.objectweb.asm.Context, int, boolean)
    {
        byte[] $stack12;
        jdk.internal.org.objectweb.asm.Context l2;
        short l6, $s0;
        byte $stack13;
        int $stack16, l7, $stack17, $stack24, l3, l3#2, l5, l10, $i0, $i1, $i2;
        jdk.internal.org.objectweb.asm.Type[] $stack15;
        java.lang.String $stack14, $stack22;
        boolean l4;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack23, $stack27;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        jdk.internal.org.objectweb.asm.MethodVisitor l1;
        char[] l9;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.MethodVisitor;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Context;

        l3 := @parameter2: int;

        l4 := @parameter3: boolean;

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        l3#2 = l3 + 1;

        $stack13 = $stack12[l3];

        $s0 = (short) $stack13;

        l6 = $s0 & 255;

        $stack14 = l2.<jdk.internal.org.objectweb.asm.Context: java.lang.String desc>;

        $stack15 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>($stack14);

        $stack16 = lengthof $stack15;

        $i0 = (int) l6;

        l7 = $stack16 - $i0;

        l5 = 0;

     label1:
        if l5 >= l7 goto label3;

        $stack27 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(l5, "Ljava/lang/Synthetic;", 0);

        if $stack27 == null goto label2;

        virtualinvoke $stack27.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visitEnd()>();

     label2:
        l5 = l5 + 1;

        goto label1;

     label3:
        l9 = l2.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

     label4:
        $i1 = (int) l6;

        $stack17 = $i1 + l7;

        if l5 >= $stack17 goto label7;

        l10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#2);

        l3#2 = l3#2 + 2;

     label5:
        if l10 <= 0 goto label6;

        $stack22 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l3#2, l9);

        $stack23 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(l5, $stack22, l4);

        $stack24 = l3#2 + 2;

        l3#2 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack24, l9, 1, $stack23);

        $i2 = (int) -1;

        l10 = l10 + $i2;

        goto label5;

     label6:
        l5 = l5 + 1;

        goto label4;

     label7:
        return;
    }

Method: readAnnotationValues
    private int readAnnotationValues(int, char[], boolean, jdk.internal.org.objectweb.asm.AnnotationVisitor)
    {
        jdk.internal.org.objectweb.asm.AnnotationVisitor l4;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int $stack11, l1, l5, l1#3, $i0, $i1;
        char[] l2;
        java.lang.String $stack12;
        boolean l3;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 := @parameter1: char[];

        l3 := @parameter2: boolean;

        l4 := @parameter3: jdk.internal.org.objectweb.asm.AnnotationVisitor;

        l5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1);

        l1#3 = l1 + 2;

        if l3 == 0 goto label2;

     label1:
        if l5 <= 0 goto label3;

        $stack11 = l1#3 + 2;

        $stack12 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l1#3, l2);

        l1#3 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack11, l2, $stack12, l4);

        $i0 = (int) -1;

        l5 = l5 + $i0;

        goto label1;

     label2:
        if l5 <= 0 goto label3;

        l1#3 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>(l1#3, l2, null, l4);

        $i1 = (int) -1;

        l5 = l5 + $i1;

        goto label2;

     label3:
        if l4 == null goto label4;

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visitEnd()>();

     label4:
        return l1#3;
    }

Method: readAnnotationValue
    private int readAnnotationValue(int, char[], java.lang.String, jdk.internal.org.objectweb.asm.AnnotationVisitor)
    {
        byte[] $stack16, $stack28, l7, $stack127;
        byte $stack17, $stack29, $stack84, $stack120, $stack128;
        java.lang.Character $stack115;
        double[] l14;
        long $stack50, $stack69;
        float[] l13;
        short $stack18, $stack30, $stack44, $stack106, $stack129, $s0, $s1, $s2;
        java.lang.String l3, $stack19, $stack20, $stack22, $stack24, $stack124;
        boolean[] l8;
        char[] l2, l10;
        int[] $stack31, $stack40, $stack47, l11, $stack53, $stack59, $stack66, $stack73, $stack80, $stack95, $stack102, $stack110, $stack116;
        java.lang.Short $stack107;
        java.lang.Byte $stack121;
        boolean $stack37;
        jdk.internal.org.objectweb.asm.Type $stack25;
        float $stack63;
        short[] l9;
        long[] l12;
        int $stack21, $stack26, $stack32, $stack33, $stack34, $stack38, $stack41, $stack42, $stack43, $stack48, $stack49, $stack54, $stack55, $stack56, $stack60, $stack61, $stack62, $stack67, $stack68, $stack74, $stack75, $stack76, $stack81, $stack82, $stack83, $stack87, $stack91, $stack94, $stack96, $stack97, $stack98, $stack103, $stack104, $stack105, $stack108, $stack111, $stack112, $stack113, $stack117, $stack118, $stack119, $stack122, $stack130, $stack131, $stack132, $stack133, $stack134, $stack135, l1, l1#2, l1#5, l5, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Boolean $stack99;
        double $stack70;
        char $stack77, $stack114;
        jdk.internal.org.objectweb.asm.AnnotationVisitor l4, $stack89, $stack93, $stack125;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        java.lang.Object $stack109;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 := @parameter1: char[];

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: jdk.internal.org.objectweb.asm.AnnotationVisitor;

        if l4 != null goto label05;

        $stack127 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack128 = $stack127[l1];

        $s0 = (short) $stack128;

        $stack129 = $s0 & 255;

        $i0 = (int) $stack129;

        lookupswitch($i0)
        {
            case 64: goto label02;
            case 91: goto label03;
            case 101: goto label01;
            default: goto label04;
        };

     label01:
        $stack130 = l1 + 5;

        return $stack130;

     label02:
        $stack133 = l1 + 3;

        $stack134 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack133, l2, 1, null);

        return $stack134;

     label03:
        $stack131 = l1 + 1;

        $stack132 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack131, l2, 0, null);

        return $stack132;

     label04:
        $stack135 = l1 + 3;

        return $stack135;

     label05:
        $stack16 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        l1#2 = l1 + 1;

        $stack17 = $stack16[l1];

        $s1 = (short) $stack17;

        $stack18 = $s1 & 255;

        $i1 = (int) $stack18;

        tableswitch($i1)
        {
            case 64: goto label16;
            case 65: goto label46;
            case 66: goto label07;
            case 67: goto label12;
            case 68: goto label06;
            case 69: goto label46;
            case 70: goto label06;
            case 71: goto label46;
            case 72: goto label46;
            case 73: goto label06;
            case 74: goto label06;
            case 75: goto label46;
            case 76: goto label46;
            case 77: goto label46;
            case 78: goto label46;
            case 79: goto label46;
            case 80: goto label46;
            case 81: goto label46;
            case 82: goto label46;
            case 83: goto label11;
            case 84: goto label46;
            case 85: goto label46;
            case 86: goto label46;
            case 87: goto label46;
            case 88: goto label46;
            case 89: goto label46;
            case 90: goto label08;
            case 91: goto label17;
            case 92: goto label46;
            case 93: goto label46;
            case 94: goto label46;
            case 95: goto label46;
            case 96: goto label46;
            case 97: goto label46;
            case 98: goto label46;
            case 99: goto label15;
            case 100: goto label46;
            case 101: goto label14;
            case 102: goto label46;
            case 103: goto label46;
            case 104: goto label46;
            case 105: goto label46;
            case 106: goto label46;
            case 107: goto label46;
            case 108: goto label46;
            case 109: goto label46;
            case 110: goto label46;
            case 111: goto label46;
            case 112: goto label46;
            case 113: goto label46;
            case 114: goto label46;
            case 115: goto label13;
            default: goto label46;
        };

     label06:
        $stack108 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        $stack109 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack108, l2);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack109);

        l1#2 = l1#2 + 2;

        goto label46;

     label07:
        $stack116 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack117 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        $stack118 = $stack116[$stack117];

        $stack119 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack118);

        $stack120 = (byte) $stack119;

        $stack121 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($stack120);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack121);

        l1#2 = l1#2 + 2;

        goto label46;

     label08:
        $stack95 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack96 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        $stack97 = $stack95[$stack96];

        $stack98 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack97);

        if $stack98 != 0 goto label09;

        $stack99 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label10;

     label09:
        $stack99 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label10:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack99);

        l1#2 = l1#2 + 2;

        goto label46;

     label11:
        $stack102 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack103 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        $stack104 = $stack102[$stack103];

        $stack105 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack104);

        $stack106 = (short) $stack105;

        $stack107 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($stack106);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack107);

        l1#2 = l1#2 + 2;

        goto label46;

     label12:
        $stack110 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack111 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        $stack112 = $stack110[$stack111];

        $stack113 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack112);

        $stack114 = (char) $stack113;

        $stack115 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($stack114);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack115);

        l1#2 = l1#2 + 2;

        goto label46;

     label13:
        $stack19 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l1#2, l2);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack19);

        l1#2 = l1#2 + 2;

        goto label46;

     label14:
        $stack20 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l1#2, l2);

        $stack21 = l1#2 + 2;

        $stack22 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack21, l2);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>(l3, $stack20, $stack22);

        l1#2 = l1#2 + 4;

        goto label46;

     label15:
        $stack24 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l1#2, l2);

        $stack25 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getType(java.lang.String)>($stack24);

        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, $stack25);

        l1#2 = l1#2 + 2;

        goto label46;

     label16:
        $stack122 = l1#2 + 2;

        $stack124 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l1#2, l2);

        $stack125 = virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,java.lang.String)>(l3, $stack124);

        l1#2 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack122, l2, 1, $stack125);

        goto label46;

     label17:
        $stack26 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        l1#2 = l1#2 + 2;

        if $stack26 != 0 goto label18;

        $stack91 = l1#2 - 2;

        $stack93 = virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)>(l3);

        $stack94 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack91, l2, 0, $stack93);

        return $stack94;

     label18:
        $stack28 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        l1#5 = l1#2 + 1;

        $stack29 = $stack28[l1#2];

        $s2 = (short) $stack29;

        $stack30 = $s2 & 255;

        $i2 = (int) $stack30;

        tableswitch($i2)
        {
            case 66: goto label19;
            case 67: goto label30;
            case 68: goto label42;
            case 69: goto label45;
            case 70: goto label39;
            case 71: goto label45;
            case 72: goto label45;
            case 73: goto label33;
            case 74: goto label36;
            case 75: goto label45;
            case 76: goto label45;
            case 77: goto label45;
            case 78: goto label45;
            case 79: goto label45;
            case 80: goto label45;
            case 81: goto label45;
            case 82: goto label45;
            case 83: goto label27;
            case 84: goto label45;
            case 85: goto label45;
            case 86: goto label45;
            case 87: goto label45;
            case 88: goto label45;
            case 89: goto label45;
            case 90: goto label22;
            default: goto label45;
        };

     label19:
        l7 = newarray (byte)[$stack26];

        l5 = 0;

     label20:
        if l5 >= $stack26 goto label21;

        $stack80 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack81 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack82 = $stack80[$stack81];

        $stack83 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack82);

        $stack84 = (byte) $stack83;

        l7[l5] = $stack84;

        l1#5 = l1#5 + 3;

        l5 = l5 + 1;

        goto label20;

     label21:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l7);

        $i3 = (int) -1;

        l1#2 = l1#5 + $i3;

        goto label46;

     label22:
        l8 = newarray (boolean)[$stack26];

        l5 = 0;

     label23:
        if l5 >= $stack26 goto label26;

        $stack38 = l5;

        $stack31 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack32 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack33 = $stack31[$stack32];

        $stack34 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack33);

        if $stack34 == 0 goto label24;

        $stack37 = 1;

        goto label25;

     label24:
        $stack37 = 0;

     label25:
        l8[$stack38] = $stack37;

        l1#5 = l1#5 + 3;

        l5 = l5 + 1;

        goto label23;

     label26:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l8);

        $i4 = (int) -1;

        l1#2 = l1#5 + $i4;

        goto label46;

     label27:
        l9 = newarray (short)[$stack26];

        l5 = 0;

     label28:
        if l5 >= $stack26 goto label29;

        $stack40 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack41 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack42 = $stack40[$stack41];

        $stack43 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack42);

        $stack44 = (short) $stack43;

        l9[l5] = $stack44;

        l1#5 = l1#5 + 3;

        l5 = l5 + 1;

        goto label28;

     label29:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l9);

        $i5 = (int) -1;

        l1#2 = l1#5 + $i5;

        goto label46;

     label30:
        l10 = newarray (char)[$stack26];

        l5 = 0;

     label31:
        if l5 >= $stack26 goto label32;

        $stack73 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack74 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack75 = $stack73[$stack74];

        $stack76 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack75);

        $stack77 = (char) $stack76;

        l10[l5] = $stack77;

        l1#5 = l1#5 + 3;

        l5 = l5 + 1;

        goto label31;

     label32:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l10);

        $i6 = (int) -1;

        l1#2 = l1#5 + $i6;

        goto label46;

     label33:
        l11 = newarray (int)[$stack26];

        l5 = 0;

     label34:
        if l5 >= $stack26 goto label35;

        $stack53 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack54 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack55 = $stack53[$stack54];

        $stack56 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack55);

        l11[l5] = $stack56;

        l1#5 = l1#5 + 3;

        l5 = l5 + 1;

        goto label34;

     label35:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l11);

        $i7 = (int) -1;

        l1#2 = l1#5 + $i7;

        goto label46;

     label36:
        l12 = newarray (long)[$stack26];

        l5 = 0;

     label37:
        if l5 >= $stack26 goto label38;

        $stack47 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack48 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack49 = $stack47[$stack48];

        $stack50 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>($stack49);

        l12[l5] = $stack50;

        l1#5 = l1#5 + 3;

        l5 = l5 + 1;

        goto label37;

     label38:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l12);

        $i8 = (int) -1;

        l1#2 = l1#5 + $i8;

        goto label46;

     label39:
        l13 = newarray (float)[$stack26];

        l5 = 0;

     label40:
        if l5 >= $stack26 goto label41;

        $stack59 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack60 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack61 = $stack59[$stack60];

        $stack62 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack61);

        $stack63 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($stack62);

        l13[l5] = $stack63;

        l1#5 = l1#5 + 3;

        l5 = l5 + 1;

        goto label40;

     label41:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l13);

        $i9 = (int) -1;

        l1#2 = l1#5 + $i9;

        goto label46;

     label42:
        l14 = newarray (double)[$stack26];

        l5 = 0;

     label43:
        if l5 >= $stack26 goto label44;

        $stack66 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack67 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#5);

        $stack68 = $stack66[$stack67];

        $stack69 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>($stack68);

        $stack70 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($stack69);

        l14[l5] = $stack70;

        l1#5 = l1#5 + 3;

        l5 = l5 + 1;

        goto label43;

     label44:
        virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(l3, l14);

        $i10 = (int) -1;

        l1#2 = l1#5 + $i10;

        goto label46;

     label45:
        $stack87 = l1#5 - 3;

        $stack89 = virtualinvoke l4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)>(l3);

        l1#2 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack87, l2, 0, $stack89);

     label46:
        return l1#2;
    }

Method: getImplicitFrame
    private void getImplicitFrame(jdk.internal.org.objectweb.asm.Context)
    {
        java.lang.Integer $stack37, $stack39, $stack41, $stack43, $stack54;
        boolean $stack46;
        java.lang.Object[] l3;
        jdk.internal.org.objectweb.asm.Context l1;
        int $stack7, $stack8, l6, $stack13, $stack29, $stack30, $stack31, $stack36, $stack38, $stack40, $stack42, $stack48, $stack50, l4, l5, $stack9, $i0, $i1, $i2, $i3, $i4;
        java.lang.String l2, $stack14, $stack32, $stack44, $stack45, $stack51;
        char $stack11, $stack12, $stack17, $stack28, $stack10;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        char[] $stack49;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Context;

        l2 = l1.<jdk.internal.org.objectweb.asm.Context: java.lang.String desc>;

        l3 = l1.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        l4 = 0;

        $stack7 = l1.<jdk.internal.org.objectweb.asm.Context: int access>;

        $stack8 = $stack7 & 8;

        if $stack8 != 0 goto label02;

        $stack45 = "<init>";

        $stack44 = l1.<jdk.internal.org.objectweb.asm.Context: java.lang.String name>;

        $stack46 = virtualinvoke $stack45.<java.lang.String: boolean equals(java.lang.Object)>($stack44);

        if $stack46 == 0 goto label01;

        l4 = 1;

        $stack54 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer UNINITIALIZED_THIS>;

        l3[0] = $stack54;

        goto label02;

     label01:
        l4 = 1;

        $stack48 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack50 = $stack48 + 2;

        $stack49 = l1.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack51 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack50, $stack49);

        l3[0] = $stack51;

     label02:
        l5 = 1;

     label03:
        l6 = l5;

        $stack9 = l5;

        l5 = l5 + 1;

        $stack10 = virtualinvoke l2.<java.lang.String: char charAt(int)>($stack9);

        $i0 = (int) $stack10;

        tableswitch($i0)
        {
            case 66: goto label04;
            case 67: goto label04;
            case 68: goto label07;
            case 69: goto label14;
            case 70: goto label05;
            case 71: goto label14;
            case 72: goto label14;
            case 73: goto label04;
            case 74: goto label06;
            case 75: goto label14;
            case 76: goto label12;
            case 77: goto label14;
            case 78: goto label14;
            case 79: goto label14;
            case 80: goto label14;
            case 81: goto label14;
            case 82: goto label14;
            case 83: goto label04;
            case 84: goto label14;
            case 85: goto label14;
            case 86: goto label14;
            case 87: goto label14;
            case 88: goto label14;
            case 89: goto label14;
            case 90: goto label04;
            case 91: goto label08;
            default: goto label14;
        };

     label04:
        $stack42 = l4;

        l4 = l4 + 1;

        $stack43 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer INTEGER>;

        l3[$stack42] = $stack43;

        goto label15;

     label05:
        $stack38 = l4;

        l4 = l4 + 1;

        $stack39 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer FLOAT>;

        l3[$stack38] = $stack39;

        goto label15;

     label06:
        $stack36 = l4;

        l4 = l4 + 1;

        $stack37 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer LONG>;

        l3[$stack36] = $stack37;

        goto label15;

     label07:
        $stack40 = l4;

        l4 = l4 + 1;

        $stack41 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer DOUBLE>;

        l3[$stack40] = $stack41;

        goto label15;

     label08:
        $stack11 = virtualinvoke l2.<java.lang.String: char charAt(int)>(l5);

        $i1 = (int) $stack11;

        if $i1 != 91 goto label09;

        l5 = l5 + 1;

        goto label08;

     label09:
        $stack12 = virtualinvoke l2.<java.lang.String: char charAt(int)>(l5);

        $i2 = (int) $stack12;

        if $i2 != 76 goto label11;

        l5 = l5 + 1;

     label10:
        $stack17 = virtualinvoke l2.<java.lang.String: char charAt(int)>(l5);

        $i3 = (int) $stack17;

        if $i3 == 59 goto label11;

        l5 = l5 + 1;

        goto label10;

     label11:
        $stack13 = l4;

        l4 = l4 + 1;

        l5 = l5 + 1;

        $stack14 = virtualinvoke l2.<java.lang.String: java.lang.String substring(int,int)>(l6, l5);

        l3[$stack13] = $stack14;

        goto label15;

     label12:
        $stack28 = virtualinvoke l2.<java.lang.String: char charAt(int)>(l5);

        $i4 = (int) $stack28;

        if $i4 == 59 goto label13;

        l5 = l5 + 1;

        goto label12;

     label13:
        $stack29 = l4;

        l4 = l4 + 1;

        $stack31 = l6 + 1;

        $stack30 = l5;

        l5 = l5 + 1;

        $stack32 = virtualinvoke l2.<java.lang.String: java.lang.String substring(int,int)>($stack31, $stack30);

        l3[$stack29] = $stack32;

        goto label15;

     label14:
        goto label16;

     label15:
        goto label03;

     label16:
        l1.<jdk.internal.org.objectweb.asm.Context: int localCount> = l4;

        return;
    }

Method: readFrame
    private int readFrame(int, boolean, boolean, jdk.internal.org.objectweb.asm.Context)
    {
        byte[] $stack57;
        byte $stack58;
        boolean l2, l3;
        java.lang.Object[] $stack20, $stack24, $stack39, $stack52, $stack54;
        jdk.internal.org.objectweb.asm.Context l4;
        short l7;
        int $stack12, $stack13, $stack19, $stack23, $stack27, $stack28, $stack29, $stack30, $stack38, $stack48, $stack49, $stack50, $stack51, $stack56, l1, l8, $stack42, l9, l10, l1#10, $stack15, $stack14, $stack16, $stack17, $i0, $i1, $i2, $i3;
        jdk.internal.org.objectweb.asm.Label[] l6;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        char[] l5;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 := @parameter1: boolean;

        l3 := @parameter2: boolean;

        l4 := @parameter3: jdk.internal.org.objectweb.asm.Context;

        l5 = l4.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        l6 = l4.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        if l2 == 0 goto label01;

        $stack57 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack56 = l1;

        l1 = l1 + 1;

        $stack58 = $stack57[$stack56];

        l7 = $stack58 & 255;

        goto label02;

     label01:
        l7 = 255;

        $i0 = (int) -1;

        l4.<jdk.internal.org.objectweb.asm.Context: int offset> = $i0;

     label02:
        l4.<jdk.internal.org.objectweb.asm.Context: int localDiff> = 0;

        if l7 >= 64 goto label03;

        l8 = l7;

        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 3;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        goto label16;

     label03:
        if l7 >= 128 goto label04;

        l8 = l7 - 64;

        $stack54 = l4.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        l1 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack54, 0, l1, l5, l6);

        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 4;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 1;

        goto label16;

     label04:
        l8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1);

        l1 = l1 + 2;

        if l7 != 247 goto label05;

        $stack52 = l4.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        l1 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack52, 0, l1, l5, l6);

        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 4;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 1;

        goto label16;

     label05:
        if l7 < 248 goto label06;

        if l7 >= 251 goto label06;

        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 2;

        $stack48 = 251 - l7;

        l4.<jdk.internal.org.objectweb.asm.Context: int localDiff> = $stack48;

        $stack50 = l4.<jdk.internal.org.objectweb.asm.Context: int localCount>;

        $stack49 = l4.<jdk.internal.org.objectweb.asm.Context: int localDiff>;

        $stack51 = $stack50 - $stack49;

        l4.<jdk.internal.org.objectweb.asm.Context: int localCount> = $stack51;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        goto label16;

     label06:
        if l7 != 251 goto label07;

        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 3;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        goto label16;

     label07:
        if l7 >= 255 goto label12;

        if l3 == 0 goto label08;

        $stack42 = l4.<jdk.internal.org.objectweb.asm.Context: int localCount>;

        goto label09;

     label08:
        $stack42 = 0;

     label09:
        l9 = $stack42;

        l10 = l7 - 251;

     label10:
        if l10 <= 0 goto label11;

        $stack39 = l4.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        $stack38 = l9;

        l9 = l9 + 1;

        l1 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack39, $stack38, l1, l5, l6);

        $i1 = (int) -1;

        l10 = l10 + $i1;

        goto label10;

     label11:
        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 1;

        $stack27 = l7 - 251;

        l4.<jdk.internal.org.objectweb.asm.Context: int localDiff> = $stack27;

        $stack29 = l4.<jdk.internal.org.objectweb.asm.Context: int localCount>;

        $stack28 = l4.<jdk.internal.org.objectweb.asm.Context: int localDiff>;

        $stack30 = $stack29 + $stack28;

        l4.<jdk.internal.org.objectweb.asm.Context: int localCount> = $stack30;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        goto label16;

     label12:
        l4.<jdk.internal.org.objectweb.asm.Context: int mode> = 0;

        $stack12 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1);

        l9 = $stack12;

        l1#10 = l1 + 2;

        l4.<jdk.internal.org.objectweb.asm.Context: int localDiff> = $stack12;

        l4.<jdk.internal.org.objectweb.asm.Context: int localCount> = $stack12;

        l10 = 0;

     label13:
        if l9 <= 0 goto label14;

        $stack24 = l4.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        $stack23 = l10;

        l10 = l10 + 1;

        l1#10 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack24, $stack23, l1#10, l5, l6);

        $i2 = (int) -1;

        l9 = l9 + $i2;

        goto label13;

     label14:
        $stack13 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#10);

        l9 = $stack13;

        l1 = l1#10 + 2;

        l4.<jdk.internal.org.objectweb.asm.Context: int stackCount> = $stack13;

        l10 = 0;

     label15:
        if l9 <= 0 goto label16;

        $stack20 = l4.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        $stack19 = l10;

        l10 = l10 + 1;

        l1 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack20, $stack19, l1, l5, l6);

        $i3 = (int) -1;

        l9 = l9 + $i3;

        goto label15;

     label16:
        $stack15 = l4.<jdk.internal.org.objectweb.asm.Context: int offset>;

        $stack14 = l8 + 1;

        $stack16 = $stack15 + $stack14;

        l4.<jdk.internal.org.objectweb.asm.Context: int offset> = $stack16;

        $stack17 = l4.<jdk.internal.org.objectweb.asm.Context: int offset>;

        virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack17, l6);

        return l1;
    }

Method: readFrameType
    private int readFrameType(java.lang.Object[], int, int, char[], jdk.internal.org.objectweb.asm.Label[])
    {
        byte[] $stack8;
        java.lang.Object[] l1;
        java.lang.Integer $stack11, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18;
        short l6, $s0;
        byte $stack9;
        int l2, $stack19, l3, l3#2, $i0;
        java.lang.String $stack10;
        jdk.internal.org.objectweb.asm.Label[] l5;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        jdk.internal.org.objectweb.asm.Label $stack20;
        char[] l4;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: java.lang.Object[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        l4 := @parameter3: char[];

        l5 := @parameter4: jdk.internal.org.objectweb.asm.Label[];

        $stack8 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        l3#2 = l3 + 1;

        $stack9 = $stack8[l3];

        $s0 = (short) $stack9;

        l6 = $s0 & 255;

        $i0 = (int) l6;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            default: goto label09;
        };

     label01:
        $stack18 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer TOP>;

        l1[l2] = $stack18;

        goto label10;

     label02:
        $stack17 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer INTEGER>;

        l1[l2] = $stack17;

        goto label10;

     label03:
        $stack16 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer FLOAT>;

        l1[l2] = $stack16;

        goto label10;

     label04:
        $stack15 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer DOUBLE>;

        l1[l2] = $stack15;

        goto label10;

     label05:
        $stack14 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer LONG>;

        l1[l2] = $stack14;

        goto label10;

     label06:
        $stack13 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer NULL>;

        l1[l2] = $stack13;

        goto label10;

     label07:
        $stack11 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer UNINITIALIZED_THIS>;

        l1[l2] = $stack11;

        goto label10;

     label08:
        $stack10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l3#2, l4);

        l1[l2] = $stack10;

        l3#2 = l3#2 + 2;

        goto label10;

     label09:
        $stack19 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l3#2);

        $stack20 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack19, l5);

        l1[l2] = $stack20;

        l3#2 = l3#2 + 2;

     label10:
        return l3#2;
    }

Method: readLabel
    protected jdk.internal.org.objectweb.asm.Label readLabel(int, jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.Label $stack3, $stack4, $stack5;
        int l1;
        jdk.internal.org.objectweb.asm.Label[] l2;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.Label[];

        $stack3 = l2[l1];

        if $stack3 != null goto label1;

        $stack5 = new jdk.internal.org.objectweb.asm.Label;

        specialinvoke $stack5.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        l2[l1] = $stack5;

     label1:
        $stack4 = l2[l1];

        return $stack4;
    }

Method: getAttributes
    private int getAttributes()
    {
        int $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack12, $stack13, $stack16, $stack18, $stack19, $stack21, $stack24, $stack26, $stack27, l1, l2, l3, $i0, $i1, $i2, $i3;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack7 = $stack4 + 8;

        $stack5 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack6 = $stack5 + 6;

        $stack8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack6);

        $stack9 = $stack8 * 2;

        l1 = $stack7 + $stack9;

        l2 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1);

     label1:
        if l2 <= 0 goto label4;

        $stack21 = l1 + 8;

        l3 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack21);

     label2:
        if l3 <= 0 goto label3;

        $stack24 = l1 + 12;

        $stack26 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack24);

        $stack27 = 6 + $stack26;

        l1 = l1 + $stack27;

        $i0 = (int) -1;

        l3 = l3 + $i0;

        goto label2;

     label3:
        l1 = l1 + 8;

        $i1 = (int) -1;

        l2 = l2 + $i1;

        goto label1;

     label4:
        l1 = l1 + 2;

        l2 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1);

     label5:
        if l2 <= 0 goto label8;

        $stack13 = l1 + 8;

        l3 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack13);

     label6:
        if l3 <= 0 goto label7;

        $stack16 = l1 + 12;

        $stack18 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack16);

        $stack19 = 6 + $stack18;

        l1 = l1 + $stack19;

        $i2 = (int) -1;

        l3 = l3 + $i2;

        goto label6;

     label7:
        l1 = l1 + 8;

        $i3 = (int) -1;

        l2 = l2 + $i3;

        goto label5;

     label8:
        $stack12 = l1 + 2;

        return $stack12;
    }

Method: readAttribute
    private jdk.internal.org.objectweb.asm.Attribute readAttribute(jdk.internal.org.objectweb.asm.Attribute[], java.lang.String, int, int, char[], int, jdk.internal.org.objectweb.asm.Label[])
    {
        int $stack9, l3, l4, l6, l8, $i0;
        java.lang.String l2, $stack13;
        boolean $stack14;
        jdk.internal.org.objectweb.asm.Attribute $stack11, $stack12, $stack17, $stack18, $u0;
        jdk.internal.org.objectweb.asm.Label[] l7;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        char[] l5;
        jdk.internal.org.objectweb.asm.Attribute[] l1;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Attribute[];

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: int;

        l4 := @parameter3: int;

        l5 := @parameter4: char[];

        l6 := @parameter5: int;

        l7 := @parameter6: jdk.internal.org.objectweb.asm.Label[];

        l8 = 0;

     label1:
        $stack9 = lengthof l1;

        if l8 >= $stack9 goto label3;

        $stack12 = l1[l8];

        $stack13 = $stack12.<jdk.internal.org.objectweb.asm.Attribute: java.lang.String type>;

        $stack14 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>(l2);

        if $stack14 == 0 goto label2;

        $stack17 = l1[l8];

        $stack18 = virtualinvoke $stack17.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute read(jdk.internal.org.objectweb.asm.ClassReader,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>(l0, l3, l4, l5, l6, l7);

        return $stack18;

     label2:
        l8 = l8 + 1;

        goto label1;

     label3:
        $u0 = new jdk.internal.org.objectweb.asm.Attribute;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.Attribute: void <init>(java.lang.String)>(l2);

        $i0 = (int) -1;

        $stack11 = virtualinvoke $u0.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute read(jdk.internal.org.objectweb.asm.ClassReader,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>(l0, l3, l4, null, $i0, null);

        return $stack11;
    }

Method: getItemCount
    public int getItemCount()
    {
        int $stack2;
        int[] $stack1;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack2 = lengthof $stack1;

        return $stack2;
    }

Method: getItem
    public int getItem(int)
    {
        int[] $stack2;
        int l1, $stack3;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack3 = $stack2[l1];

        return $stack3;
    }

Method: getMaxStringLength
    public int getMaxStringLength()
    {
        int $stack1;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        return $stack1;
    }

Method: readByte
    public int readByte(int)
    {
        byte[] $stack2;
        short $stack4, $s0;
        byte $stack3;
        int l1, $i0;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack3 = $stack2[l1];

        $s0 = (short) $stack3;

        $stack4 = $s0 & 255;

        $i0 = (int) $stack4;

        return $i0;
    }

Method: readUnsignedShort
    public int readUnsignedShort(int)
    {
        byte[] l2;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        short $stack4, $stack7, $s0, $s1;
        byte $stack3, $stack6;
        int l1, $stack5, $stack8, $stack9, $i0, $i1;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack3 = l2[l1];

        $s0 = (short) $stack3;

        $stack4 = $s0 & 255;

        $i0 = (int) $stack4;

        $stack8 = $i0 << 8;

        $stack5 = l1 + 1;

        $stack6 = l2[$stack5];

        $s1 = (short) $stack6;

        $stack7 = $s1 & 255;

        $i1 = (int) $stack7;

        $stack9 = $stack8 | $i1;

        return $stack9;
    }

Method: readShort
    public short readShort(int)
    {
        byte[] l2;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        short $stack4, $stack7, $stack10, $s0, $s1;
        byte $stack3, $stack6;
        int l1, $stack5, $stack8, $stack9, $i0, $i1;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack3 = l2[l1];

        $s0 = (short) $stack3;

        $stack4 = $s0 & 255;

        $i0 = (int) $stack4;

        $stack8 = $i0 << 8;

        $stack5 = l1 + 1;

        $stack6 = l2[$stack5];

        $s1 = (short) $stack6;

        $stack7 = $s1 & 255;

        $i1 = (int) $stack7;

        $stack9 = $stack8 | $i1;

        $stack10 = (short) $stack9;

        return $stack10;
    }

Method: readInt
    public int readInt(int)
    {
        byte[] l2;
        short $stack4, $stack7, $stack12, $stack17, $s0, $s1, $s2, $s3;
        byte $stack3, $stack6, $stack11, $stack16;
        int l1, $stack5, $stack8, $stack9, $stack10, $stack13, $stack14, $stack15, $stack18, $stack19, $i0, $i1, $i2, $i3;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack3 = l2[l1];

        $s0 = (short) $stack3;

        $stack4 = $s0 & 255;

        $i0 = (int) $stack4;

        $stack9 = $i0 << 24;

        $stack5 = l1 + 1;

        $stack6 = l2[$stack5];

        $s1 = (short) $stack6;

        $stack7 = $s1 & 255;

        $i1 = (int) $stack7;

        $stack8 = $i1 << 16;

        $stack14 = $stack9 | $stack8;

        $stack10 = l1 + 2;

        $stack11 = l2[$stack10];

        $s2 = (short) $stack11;

        $stack12 = $s2 & 255;

        $i2 = (int) $stack12;

        $stack13 = $i2 << 8;

        $stack18 = $stack14 | $stack13;

        $stack15 = l1 + 3;

        $stack16 = l2[$stack15];

        $s3 = (short) $stack16;

        $stack17 = $s3 & 255;

        $i3 = (int) $stack17;

        $stack19 = $stack18 | $i3;

        return $stack19;
    }

Method: readLong
    public long readLong(int)
    {
        long l2, $stack9, l4, $stack10, $stack11;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int l1, $stack6, $stack7, $stack8;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        $stack6 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l1);

        l2 = (long) $stack6;

        $stack7 = l1 + 4;

        $stack8 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack7);

        $stack9 = (long) $stack8;

        l4 = $stack9 & 4294967295L;

        $stack10 = l2 << 32;

        $stack11 = $stack10 | l4;

        return $stack11;
    }

Method: readUTF8
    public java.lang.String readUTF8(int, char[])
    {
        java.lang.String[] $stack6, $stack8;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        int[] $stack7;
        int $stack5, $stack9, $stack10, l1, l1#2;
        char[] l2;
        java.lang.String l4, $stack11;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 := @parameter1: char[];

        $stack5 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1);

        if l1 == 0 goto label1;

        if $stack5 != 0 goto label2;

     label1:
        return null;

     label2:
        $stack6 = l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings>;

        l4 = $stack6[$stack5];

        if l4 == null goto label3;

        return l4;

     label3:
        $stack7 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        l1#2 = $stack7[$stack5];

        $stack8 = l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings>;

        $stack9 = l1#2 + 2;

        $stack10 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1#2);

        $stack11 = specialinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>($stack9, $stack10, l2);

        $stack8[$stack5] = $stack11;

        return $stack11;
    }

Method: readUTF
    private java.lang.String readUTF(int, int, char[])
    {
        byte[] l5;
        short $stack22, $stack27, l7#6, $s0;
        byte $stack12, $stack18, l8, l7;
        int l2, l4, $stack11, $stack13, $stack14, $stack17, $stack19, $stack20, $stack28, l1, l6, l9, $i0, $i1, $i2, $i3, $i4;
        java.lang.String $u0;
        char $stack21, $stack29;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        char[] l3;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: char[];

        l4 = l1 + l2;

        l5 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        l6 = 0;

        l8 = 0;

        l9 = 0;

     label1:
        if l1 >= l4 goto label8;

        $stack11 = l1;

        l1 = l1 + 1;

        l7 = l5[$stack11];

        tableswitch(l8)
        {
            case 0: goto label2;
            case 1: goto label5;
            case 2: goto label6;
            default: goto label7;
        };

     label2:
        $s0 = (short) l7;

        l7#6 = $s0 & 255;

        $i0 = (int) l7#6;

        if $i0 >= 128 goto label3;

        $stack28 = l6;

        l6 = l6 + 1;

        $stack29 = (char) l7#6;

        l3[$stack28] = $stack29;

        goto label7;

     label3:
        $i1 = (int) l7#6;

        if $i1 >= 224 goto label4;

        $i2 = (int) l7#6;

        if $i2 <= 191 goto label4;

        $stack27 = l7#6 & 31;

        l9 = (char) $stack27;

        l8 = 1;

        goto label7;

     label4:
        $stack22 = l7#6 & 15;

        l9 = (char) $stack22;

        l8 = 2;

        goto label7;

     label5:
        $stack17 = l6;

        l6 = l6 + 1;

        $stack19 = l9 << 6;

        $stack18 = l7 & 63;

        $i3 = (int) $stack18;

        $stack20 = $stack19 | $i3;

        $stack21 = (char) $stack20;

        l3[$stack17] = $stack21;

        l8 = 0;

        goto label7;

     label6:
        $stack13 = l9 << 6;

        $stack12 = l7 & 63;

        $i4 = (int) $stack12;

        $stack14 = $stack13 | $i4;

        l9 = (char) $stack14;

        l8 = 1;

     label7:
        goto label1;

     label8:
        $u0 = new java.lang.String;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>(l3, 0, l6);

        return $u0;
    }

Method: readClass
    public java.lang.String readClass(int, char[])
    {
        int[] $stack3;
        int l1, $stack4, $stack5;
        char[] l2;
        java.lang.String $stack6;
        jdk.internal.org.objectweb.asm.ClassReader l0;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 := @parameter1: char[];

        $stack3 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack4 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l1);

        $stack5 = $stack3[$stack4];

        $stack6 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack5, l2);

        return $stack6;
    }

Method: readConst
    public java.lang.Object readConst(int, char[])
    {
        byte[] $stack12;
        java.lang.Float $stack26;
        jdk.internal.org.objectweb.asm.Handle $u0;
        java.lang.Integer $stack28;
        byte $stack13;
        int[] $stack10, l5;
        java.lang.Long $stack23;
        jdk.internal.org.objectweb.asm.Type $stack15, $stack18;
        float $stack25;
        java.lang.Double $stack21;
        long $stack19, $stack22;
        int l1, l3, $stack11, $stack24, $stack27, $stack29, $stack30, $stack31, $stack33, $stack34, $stack36, l6, $i0;
        java.lang.String $stack14, $stack16, $stack17, $stack32, $stack35, $stack37;
        double $stack20;
        jdk.internal.org.objectweb.asm.ClassReader l0;
        char[] l2;

        l0 := @this: jdk.internal.org.objectweb.asm.ClassReader;

        l1 := @parameter0: int;

        l2 := @parameter1: char[];

        $stack10 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        l3 = $stack10[l1];

        $stack12 = l0.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack11 = l3 - 1;

        $stack13 = $stack12[$stack11];

        $i0 = (int) $stack13;

        tableswitch($i0)
        {
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label4;
            case 7: goto label5;
            case 8: goto label6;
            case 9: goto label8;
            case 10: goto label8;
            case 11: goto label8;
            case 12: goto label8;
            case 13: goto label8;
            case 14: goto label8;
            case 15: goto label8;
            case 16: goto label7;
            default: goto label8;
        };

     label1:
        $stack27 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3);

        $stack28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack27);

        return $stack28;

     label2:
        $stack24 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(l3);

        $stack25 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($stack24);

        $stack26 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($stack25);

        return $stack26;

     label3:
        $stack22 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>(l3);

        $stack23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack22);

        return $stack23;

     label4:
        $stack19 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>(l3);

        $stack20 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($stack19);

        $stack21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack20);

        return $stack21;

     label5:
        $stack17 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l3, l2);

        $stack18 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getObjectType(java.lang.String)>($stack17);

        return $stack18;

     label6:
        $stack16 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l3, l2);

        return $stack16;

     label7:
        $stack14 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l3, l2);

        $stack15 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getMethodType(java.lang.String)>($stack14);

        return $stack15;

     label8:
        $stack29 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>(l3);

        l5 = l0.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack30 = l3 + 1;

        $stack31 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack30);

        l6 = l5[$stack31];

        $stack32 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(l6, l2);

        $stack33 = l6 + 2;

        $stack34 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack33);

        l6 = l5[$stack34];

        $stack35 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l6, l2);

        $stack36 = l6 + 2;

        $stack37 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack36, l2);

        $u0 = new jdk.internal.org.objectweb.asm.Handle;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.Handle: void <init>(int,java.lang.String,java.lang.String,java.lang.String)>($stack29, $stack32, $stack35, $stack37);

        return $u0;
    }

