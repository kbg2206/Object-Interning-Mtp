Class: jdk.internal.org.objectweb.asm.FieldVisitor
Field: api int
Field: fv jdk.internal.org.objectweb.asm.FieldVisitor
Method: <init>
    public void <init>(int)
    {
        int l1;
        jdk.internal.org.objectweb.asm.FieldVisitor l0;

        l0 := @this: jdk.internal.org.objectweb.asm.FieldVisitor;

        l1 := @parameter0: int;

        specialinvoke l0.<jdk.internal.org.objectweb.asm.FieldVisitor: void <init>(int,jdk.internal.org.objectweb.asm.FieldVisitor)>(l1, null);

        return;
    }

Method: <init>
    public void <init>(int, jdk.internal.org.objectweb.asm.FieldVisitor)
    {
        jdk.internal.org.objectweb.asm.FieldVisitor l0, l2;
        int l1;
        java.lang.IllegalArgumentException $stack7;

        l0 := @this: jdk.internal.org.objectweb.asm.FieldVisitor;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.FieldVisitor;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        if l1 == 262144 goto label1;

        if l1 == 327680 goto label1;

        $stack7 = new java.lang.IllegalArgumentException;

        specialinvoke $stack7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $stack7;

     label1:
        l0.<jdk.internal.org.objectweb.asm.FieldVisitor: int api> = l1;

        l0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv> = l2;

        return;
    }

Method: visitAnnotation
    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.FieldVisitor l0, $stack3, $stack4;
        java.lang.String l1;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack5;
        boolean l2;

        l0 := @this: jdk.internal.org.objectweb.asm.FieldVisitor;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: boolean;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        if $stack3 == null goto label1;

        $stack4 = l0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        $stack5 = virtualinvoke $stack4.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>(l1, l2);

        return $stack5;

     label1:
        return null;
    }

Method: visitTypeAnnotation
    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.TypePath l2;
        jdk.internal.org.objectweb.asm.FieldVisitor l0, $stack6, $stack7;
        java.lang.RuntimeException $stack9;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack8;
        int $stack5, l1;
        java.lang.String l3;
        boolean l4;

        l0 := @this: jdk.internal.org.objectweb.asm.FieldVisitor;

        l1 := @parameter0: int;

        l2 := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: boolean;

        $stack5 = l0.<jdk.internal.org.objectweb.asm.FieldVisitor: int api>;

        if $stack5 >= 327680 goto label1;

        $stack9 = new java.lang.RuntimeException;

        specialinvoke $stack9.<java.lang.RuntimeException: void <init>()>();

        throw $stack9;

     label1:
        $stack6 = l0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        if $stack6 == null goto label2;

        $stack7 = l0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>(l1, l2, l3, l4);

        return $stack8;

     label2:
        return null;
    }

Method: visitAttribute
    public void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)
    {
        jdk.internal.org.objectweb.asm.FieldVisitor l0, $stack2, $stack3;
        jdk.internal.org.objectweb.asm.Attribute l1;

        l0 := @this: jdk.internal.org.objectweb.asm.FieldVisitor;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.Attribute;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        if $stack2 == null goto label1;

        $stack3 = l0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        virtualinvoke $stack3.<jdk.internal.org.objectweb.asm.FieldVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(l1);

     label1:
        return;
    }

Method: visitEnd
    public void visitEnd()
    {
        jdk.internal.org.objectweb.asm.FieldVisitor l0, $stack1, $stack2;

        l0 := @this: jdk.internal.org.objectweb.asm.FieldVisitor;

        $stack1 = l0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        if $stack1 == null goto label1;

        $stack2 = l0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        virtualinvoke $stack2.<jdk.internal.org.objectweb.asm.FieldVisitor: void visitEnd()>();

     label1:
        return;
    }

