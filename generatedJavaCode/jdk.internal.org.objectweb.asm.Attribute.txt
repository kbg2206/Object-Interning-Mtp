Class: jdk.internal.org.objectweb.asm.Attribute
Field: type java.lang.String
Field: value byte[]
Field: next jdk.internal.org.objectweb.asm.Attribute
Method: <init>
    protected void <init>(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.Attribute l0;
        java.lang.String l1;

        l0 := @this: jdk.internal.org.objectweb.asm.Attribute;

        l1 := @parameter0: java.lang.String;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<jdk.internal.org.objectweb.asm.Attribute: java.lang.String type> = l1;

        return;
    }

Method: isUnknown
    public boolean isUnknown()
    {
        jdk.internal.org.objectweb.asm.Attribute l0;

        l0 := @this: jdk.internal.org.objectweb.asm.Attribute;

        return 1;
    }

Method: isCodeAttribute
    public boolean isCodeAttribute()
    {
        jdk.internal.org.objectweb.asm.Attribute l0;

        l0 := @this: jdk.internal.org.objectweb.asm.Attribute;

        return 0;
    }

Method: getLabels
    protected jdk.internal.org.objectweb.asm.Label[] getLabels()
    {
        jdk.internal.org.objectweb.asm.Attribute l0;

        l0 := @this: jdk.internal.org.objectweb.asm.Attribute;

        return null;
    }

Method: read
    protected jdk.internal.org.objectweb.asm.Attribute read(jdk.internal.org.objectweb.asm.ClassReader, int, int, char[], int, jdk.internal.org.objectweb.asm.Label[])
    {
        byte[] $stack10, $stack11, $stack12;
        jdk.internal.org.objectweb.asm.Attribute $stack8, l0;
        jdk.internal.org.objectweb.asm.Label[] l6;
        jdk.internal.org.objectweb.asm.ClassReader l1;
        int l3, l2, l5;
        char[] l4;
        java.lang.String $stack9;

        l0 := @this: jdk.internal.org.objectweb.asm.Attribute;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassReader;

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        l4 := @parameter3: char[];

        l5 := @parameter4: int;

        l6 := @parameter5: jdk.internal.org.objectweb.asm.Label[];

        $stack8 = new jdk.internal.org.objectweb.asm.Attribute;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.Attribute: java.lang.String type>;

        specialinvoke $stack8.<jdk.internal.org.objectweb.asm.Attribute: void <init>(java.lang.String)>($stack9);

        $stack10 = newarray (byte)[l3];

        $stack8.<jdk.internal.org.objectweb.asm.Attribute: byte[] value> = $stack10;

        $stack12 = l1.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack11 = $stack8.<jdk.internal.org.objectweb.asm.Attribute: byte[] value>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack12, l2, $stack11, 0, l3);

        return $stack8;
    }

Method: write
    protected jdk.internal.org.objectweb.asm.ByteVector write(jdk.internal.org.objectweb.asm.ClassWriter, byte[], int, int, int)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l1;
        byte[] $stack8, $stack9, l2;
        jdk.internal.org.objectweb.asm.Attribute l0;
        jdk.internal.org.objectweb.asm.ByteVector $stack7;
        int $stack10, l3, l4, l5;

        l0 := @this: jdk.internal.org.objectweb.asm.Attribute;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassWriter;

        l2 := @parameter1: byte[];

        l3 := @parameter2: int;

        l4 := @parameter3: int;

        l5 := @parameter4: int;

        $stack7 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        $stack8 = l0.<jdk.internal.org.objectweb.asm.Attribute: byte[] value>;

        $stack7.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data> = $stack8;

        $stack9 = l0.<jdk.internal.org.objectweb.asm.Attribute: byte[] value>;

        $stack10 = lengthof $stack9;

        $stack7.<jdk.internal.org.objectweb.asm.ByteVector: int length> = $stack10;

        return $stack7;
    }

Method: getCount
    final int getCount()
    {
        jdk.internal.org.objectweb.asm.Attribute l0, l2;
        int l1;

        l0 := @this: jdk.internal.org.objectweb.asm.Attribute;

        l1 = 0;

        l2 = l0;

     label1:
        if l2 == null goto label2;

        l1 = l1 + 1;

        l2 = l2.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        goto label1;

     label2:
        return l1;
    }

Method: getSize
    final int getSize(jdk.internal.org.objectweb.asm.ClassWriter, byte[], int, int, int)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l1;
        byte[] l2;
        jdk.internal.org.objectweb.asm.Attribute l0, l6;
        jdk.internal.org.objectweb.asm.ByteVector $stack10;
        int l3, l4, l5, $stack11, $stack12, l7;
        java.lang.String $stack8;

        l0 := @this: jdk.internal.org.objectweb.asm.Attribute;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassWriter;

        l2 := @parameter1: byte[];

        l3 := @parameter2: int;

        l4 := @parameter3: int;

        l5 := @parameter4: int;

        l6 = l0;

        l7 = 0;

     label1:
        if l6 == null goto label2;

        $stack8 = l6.<jdk.internal.org.objectweb.asm.Attribute: java.lang.String type>;

        virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack8);

        $stack10 = virtualinvoke l6.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.ByteVector write(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int)>(l1, l2, l3, l4, l5);

        $stack11 = $stack10.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack12 = $stack11 + 6;

        l7 = l7 + $stack12;

        l6 = l6.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        goto label1;

     label2:
        return l7;
    }

Method: put
    final void put(jdk.internal.org.objectweb.asm.ClassWriter, byte[], int, int, int, jdk.internal.org.objectweb.asm.ByteVector)
    {
        jdk.internal.org.objectweb.asm.ClassWriter l1;
        byte[] l2, $stack16;
        jdk.internal.org.objectweb.asm.Attribute l0, l7;
        jdk.internal.org.objectweb.asm.ByteVector $stack9, l6, $stack12;
        int l3, l4, l5, $stack11, $stack13, $stack15;
        java.lang.String $stack10;

        l0 := @this: jdk.internal.org.objectweb.asm.Attribute;

        l1 := @parameter0: jdk.internal.org.objectweb.asm.ClassWriter;

        l2 := @parameter1: byte[];

        l3 := @parameter2: int;

        l4 := @parameter3: int;

        l5 := @parameter4: int;

        l6 := @parameter5: jdk.internal.org.objectweb.asm.ByteVector;

        l7 = l0;

     label1:
        if l7 == null goto label2;

        $stack9 = virtualinvoke l7.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.ByteVector write(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int)>(l1, l2, l3, l4, l5);

        $stack10 = l7.<jdk.internal.org.objectweb.asm.Attribute: java.lang.String type>;

        $stack11 = virtualinvoke l1.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack10);

        $stack12 = virtualinvoke l6.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack11);

        $stack13 = $stack9.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $stack12.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack13);

        $stack16 = $stack9.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack15 = $stack9.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke l6.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack16, 0, $stack15);

        l7 = l7.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        goto label1;

     label2:
        return;
    }

