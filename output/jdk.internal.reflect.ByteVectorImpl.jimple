class jdk.internal.reflect.ByteVectorImpl extends java.lang.Object implements jdk.internal.reflect.ByteVector
{
    private byte[] data;
    private int pos;

    public void <init>()
    {
        jdk.internal.reflect.ByteVectorImpl this;

        this := @this: jdk.internal.reflect.ByteVectorImpl;

        specialinvoke this.<jdk.internal.reflect.ByteVectorImpl: void <init>(int)>(100);

        return;
    }

    public void <init>(int)
    {
        byte[] $stack2;
        jdk.internal.reflect.ByteVectorImpl this;
        int sz, $i0;

        this := @this: jdk.internal.reflect.ByteVectorImpl;

        sz := @parameter0: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack2 = newarray (byte)[sz];

        this.<jdk.internal.reflect.ByteVectorImpl: byte[] data> = $stack2;

        $i0 = (int) -1;

        this.<jdk.internal.reflect.ByteVectorImpl: int pos> = $i0;

        return;
    }

    public int getLength()
    {
        int $stack1, $stack2;
        jdk.internal.reflect.ByteVectorImpl this;

        this := @this: jdk.internal.reflect.ByteVectorImpl;

        $stack1 = this.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        $stack2 = $stack1 + 1;

        return $stack2;
    }

    public byte get(int)
    {
        byte[] $stack2, $stack4;
        jdk.internal.reflect.ByteVectorImpl this;
        byte $stack5;
        int index, $stack3;

        this := @this: jdk.internal.reflect.ByteVectorImpl;

        index := @parameter0: int;

        $stack2 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $stack3 = lengthof $stack2;

        if index < $stack3 goto label1;

        virtualinvoke this.<jdk.internal.reflect.ByteVectorImpl: void resize(int)>(index);

        this.<jdk.internal.reflect.ByteVectorImpl: int pos> = index;

     label1:
        $stack4 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $stack5 = $stack4[index];

        return $stack5;
    }

    public void put(int, byte)
    {
        byte[] $stack3, $stack5;
        jdk.internal.reflect.ByteVectorImpl this;
        byte value;
        int index, $stack4;

        this := @this: jdk.internal.reflect.ByteVectorImpl;

        index := @parameter0: int;

        value := @parameter1: byte;

        $stack3 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $stack4 = lengthof $stack3;

        if index < $stack4 goto label1;

        virtualinvoke this.<jdk.internal.reflect.ByteVectorImpl: void resize(int)>(index);

        this.<jdk.internal.reflect.ByteVectorImpl: int pos> = index;

     label1:
        $stack5 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $stack5[index] = value;

        return;
    }

    public void add(byte)
    {
        byte[] $stack4, $stack7;
        jdk.internal.reflect.ByteVectorImpl this;
        byte value;
        int $stack2, $stack3, $stack5, $stack6, $stack8;

        this := @this: jdk.internal.reflect.ByteVectorImpl;

        value := @parameter0: byte;

        $stack2 = this.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        $stack3 = $stack2 + 1;

        this.<jdk.internal.reflect.ByteVectorImpl: int pos> = $stack3;

        $stack4 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $stack5 = lengthof $stack4;

        if $stack3 < $stack5 goto label1;

        $stack8 = this.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        virtualinvoke this.<jdk.internal.reflect.ByteVectorImpl: void resize(int)>($stack8);

     label1:
        $stack7 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $stack6 = this.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        $stack7[$stack6] = value;

        return;
    }

    public void trim()
    {
        byte[] $stack2, newData, $stack10;
        jdk.internal.reflect.ByteVectorImpl this;
        int $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9;

        this := @this: jdk.internal.reflect.ByteVectorImpl;

        $stack5 = this.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        $stack2 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $stack3 = lengthof $stack2;

        $stack4 = $stack3 - 1;

        if $stack5 == $stack4 goto label1;

        $stack6 = this.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        $stack7 = $stack6 + 1;

        newData = newarray (byte)[$stack7];

        $stack10 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $stack8 = this.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        $stack9 = $stack8 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack10, 0, newData, 0, $stack9);

        this.<jdk.internal.reflect.ByteVectorImpl: byte[] data> = newData;

     label1:
        return;
    }

    public byte[] getData()
    {
        byte[] $stack1;
        jdk.internal.reflect.ByteVectorImpl this;

        this := @this: jdk.internal.reflect.ByteVectorImpl;

        $stack1 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        return $stack1;
    }

    private void resize(int)
    {
        byte[] $stack3, $stack6, $stack8, $stack9, $stack12;
        jdk.internal.reflect.ByteVectorImpl this;
        int $stack4, $stack5, $stack7, $stack10, minSize;

        this := @this: jdk.internal.reflect.ByteVectorImpl;

        minSize := @parameter0: int;

        $stack3 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $stack4 = lengthof $stack3;

        $stack5 = 2 * $stack4;

        if minSize > $stack5 goto label1;

        $stack9 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $stack10 = lengthof $stack9;

        minSize = 2 * $stack10;

     label1:
        $stack12 = newarray (byte)[minSize];

        $stack8 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $stack6 = this.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $stack7 = lengthof $stack6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack8, 0, $stack12, 0, $stack7);

        this.<jdk.internal.reflect.ByteVectorImpl: byte[] data> = $stack12;

        return;
    }
}
