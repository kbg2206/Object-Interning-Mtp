public final class jdk.internal.misc.ScopedMemoryAccess$Scope$ScopedAccessError extends java.lang.Error
{
    static final long serialVersionUID;
    public static final jdk.internal.misc.ScopedMemoryAccess$Scope$ScopedAccessError INSTANCE;

    private void <init>()
    {
        jdk.internal.misc.ScopedMemoryAccess$Scope$ScopedAccessError this;

        this := @this: jdk.internal.misc.ScopedMemoryAccess$Scope$ScopedAccessError;

        specialinvoke this.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable,boolean,boolean)>("Attempt to access an already released memory resource", null, 0, 0);

        return;
    }

    static void <clinit>()
    {
        jdk.internal.misc.ScopedMemoryAccess$Scope$ScopedAccessError $stack0;

        <jdk.internal.misc.ScopedMemoryAccess$Scope$ScopedAccessError: long serialVersionUID> = 1L;

        $stack0 = new jdk.internal.misc.ScopedMemoryAccess$Scope$ScopedAccessError;

        specialinvoke $stack0.<jdk.internal.misc.ScopedMemoryAccess$Scope$ScopedAccessError: void <init>()>();

        <jdk.internal.misc.ScopedMemoryAccess$Scope$ScopedAccessError: jdk.internal.misc.ScopedMemoryAccess$Scope$ScopedAccessError INSTANCE> = $stack0;

        return;
    }
}
