class jdk.internal.module.ModuleBootstrap$1 extends java.lang.Object implements java.lang.module.ModuleFinder
{
    final java.util.Map val$map;
    final java.util.Set val$mrefs;

    void <init>(java.util.Map, java.util.Set)
    {
        java.util.Set l2;
        jdk.internal.module.ModuleBootstrap$1 this;
        java.util.Map l1;

        this := @this: jdk.internal.module.ModuleBootstrap$1;

        l1 := @parameter0: java.util.Map;

        l2 := @parameter1: java.util.Set;

        this.<jdk.internal.module.ModuleBootstrap$1: java.util.Map val$map> = l1;

        this.<jdk.internal.module.ModuleBootstrap$1: java.util.Set val$mrefs> = l2;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Optional find(java.lang.String)
    {
        java.util.Map $stack2;
        java.util.Optional $stack5;
        java.lang.Object $stack3;
        java.lang.module.ModuleReference $stack4;
        jdk.internal.module.ModuleBootstrap$1 this;
        java.lang.String name;

        this := @this: jdk.internal.module.ModuleBootstrap$1;

        name := @parameter0: java.lang.String;

        $stack2 = this.<jdk.internal.module.ModuleBootstrap$1: java.util.Map val$map>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(name);

        $stack4 = (java.lang.module.ModuleReference) $stack3;

        $stack5 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($stack4);

        return $stack5;
    }

    public java.util.Set findAll()
    {
        java.util.Set $stack1;
        jdk.internal.module.ModuleBootstrap$1 this;

        this := @this: jdk.internal.module.ModuleBootstrap$1;

        $stack1 = this.<jdk.internal.module.ModuleBootstrap$1: java.util.Set val$mrefs>;

        return $stack1;
    }
}
