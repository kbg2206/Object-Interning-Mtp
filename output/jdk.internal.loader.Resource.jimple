public abstract class jdk.internal.loader.Resource extends java.lang.Object
{
    private java.io.InputStream cis;

    public void <init>()
    {
        jdk.internal.loader.Resource this;

        this := @this: jdk.internal.loader.Resource;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.lang.String getName();

    public abstract java.net.URL getURL();

    public abstract java.net.URL getCodeSourceURL();

    public abstract java.io.InputStream getInputStream() throws java.io.IOException;

    public abstract int getContentLength() throws java.io.IOException;

    private synchronized java.io.InputStream cachedInputStream() throws java.io.IOException
    {
        jdk.internal.loader.Resource this;
        java.io.InputStream $stack1, $stack2, $stack3;

        this := @this: jdk.internal.loader.Resource;

        $stack1 = this.<jdk.internal.loader.Resource: java.io.InputStream cis>;

        if $stack1 != null goto label1;

        $stack3 = virtualinvoke this.<jdk.internal.loader.Resource: java.io.InputStream getInputStream()>();

        this.<jdk.internal.loader.Resource: java.io.InputStream cis> = $stack3;

     label1:
        $stack2 = this.<jdk.internal.loader.Resource: java.io.InputStream cis>;

        return $stack2;
    }

    public byte[] getBytes() throws java.io.IOException
    {
        java.lang.Throwable $stack45;
        jdk.internal.loader.Resource this;
        byte[] b;
        java.io.InterruptedIOException $stack43, $stack48, $stack49, $stack52;
        java.lang.Thread $stack14, $stack41;
        int $stack13, $stack16, $stack17, $stack21, $stack25, $stack26, $stack27, $stack28, $stack29, len, iioe_1, bytesToRead, cc, $i0;
        boolean isInterrupted;
        java.io.IOException $stack40, $stack46;
        java.io.EOFException $u0;
        java.io.InputStream $stack11;

        this := @this: jdk.internal.loader.Resource;

        $stack11 = virtualinvoke this.<jdk.internal.loader.Resource: java.io.InputStream cachedInputStream()>();

        isInterrupted = staticinvoke <java.lang.Thread: boolean interrupted()>();

     label01:
        $stack13 = virtualinvoke this.<jdk.internal.loader.Resource: int getContentLength()>();

        len = $stack13;

     label02:
        goto label04;

     label03:
        $stack52 := @caughtexception;

        staticinvoke <java.lang.Thread: boolean interrupted()>();

        isInterrupted = 1;

        goto label01;

     label04:
        b = newarray (byte)[0];

        $i0 = (int) -1;

        if $stack13 != $i0 goto label05;

        len = 2147483647;

     label05:
        iioe_1 = 0;

     label06:
        if iioe_1 >= len goto label16;

        $stack16 = lengthof b;

        if iioe_1 < $stack16 goto label08;

        $stack27 = len - iioe_1;

        $stack25 = lengthof b;

        $stack26 = $stack25 + 1024;

        $stack28 = staticinvoke <java.lang.Math: int min(int,int)>($stack27, $stack26);

        bytesToRead = $stack28;

        if $stack28 >= 0 goto label07;

        bytesToRead = len - iioe_1;

     label07:
        $stack29 = iioe_1 + bytesToRead;

        b = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(b, $stack29);

        goto label09;

     label08:
        $stack17 = lengthof b;

        bytesToRead = $stack17 - iioe_1;

     label09:
        cc = 0;

     label10:
        cc = virtualinvoke $stack11.<java.io.InputStream: int read(byte[],int,int)>(b, iioe_1, bytesToRead);

     label11:
        goto label13;

     label12:
        $stack49 := @caughtexception;

        staticinvoke <java.lang.Thread: boolean interrupted()>();

        isInterrupted = 1;

     label13:
        if cc >= 0 goto label15;

        if len == 2147483647 goto label14;

        $u0 = new java.io.EOFException;

        specialinvoke $u0.<java.io.EOFException: void <init>(java.lang.String)>("Detect premature EOF");

        throw $u0;

     label14:
        $stack21 = lengthof b;

        if $stack21 == iioe_1 goto label16;

        b = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(b, iioe_1);

        goto label16;

     label15:
        iioe_1 = iioe_1 + cc;

        goto label06;

     label16:
        virtualinvoke $stack11.<java.io.InputStream: void close()>();

     label17:
        goto label20;

     label18:
        $stack48 := @caughtexception;

        isInterrupted = 1;

        goto label20;

     label19:
        $stack46 := @caughtexception;

     label20:
        if isInterrupted == 0 goto label28;

        $stack14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $stack14.<java.lang.Thread: void interrupt()>();

        goto label28;

     label21:
        $stack45 := @caughtexception;

     label22:
        virtualinvoke $stack11.<java.io.InputStream: void close()>();

     label23:
        goto label26;

     label24:
        $stack43 := @caughtexception;

        isInterrupted = 1;

        goto label26;

     label25:
        $stack40 := @caughtexception;

     label26:
        if isInterrupted == 0 goto label27;

        $stack41 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $stack41.<java.lang.Thread: void interrupt()>();

     label27:
        throw $stack45;

     label28:
        return b;

        catch java.io.InterruptedIOException from label01 to label02 with label03;
        catch java.io.InterruptedIOException from label10 to label11 with label12;
        catch java.io.InterruptedIOException from label16 to label17 with label18;
        catch java.io.IOException from label16 to label17 with label19;
        catch java.lang.Throwable from label04 to label16 with label21;
        catch java.io.InterruptedIOException from label22 to label23 with label24;
        catch java.io.IOException from label22 to label23 with label25;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public java.nio.ByteBuffer getByteBuffer() throws java.io.IOException
    {
        jdk.internal.loader.Resource this;
        sun.nio.ByteBuffered $stack4;
        java.nio.ByteBuffer $stack5;
        java.io.InputStream $stack2;
        boolean $stack3;

        this := @this: jdk.internal.loader.Resource;

        $stack2 = virtualinvoke this.<jdk.internal.loader.Resource: java.io.InputStream cachedInputStream()>();

        $stack3 = $stack2 instanceof sun.nio.ByteBuffered;

        if $stack3 == 0 goto label1;

        $stack4 = (sun.nio.ByteBuffered) $stack2;

        $stack5 = interfaceinvoke $stack4.<sun.nio.ByteBuffered: java.nio.ByteBuffer getByteBuffer()>();

        return $stack5;

     label1:
        return null;
    }

    public java.util.jar.Manifest getManifest() throws java.io.IOException
    {
        jdk.internal.loader.Resource this;

        this := @this: jdk.internal.loader.Resource;

        return null;
    }

    public java.security.cert.Certificate[] getCertificates()
    {
        jdk.internal.loader.Resource this;

        this := @this: jdk.internal.loader.Resource;

        return null;
    }

    public java.security.CodeSigner[] getCodeSigners()
    {
        jdk.internal.loader.Resource this;

        this := @this: jdk.internal.loader.Resource;

        return null;
    }

    public java.lang.Exception getDataError()
    {
        jdk.internal.loader.Resource this;

        this := @this: jdk.internal.loader.Resource;

        return null;
    }
}
